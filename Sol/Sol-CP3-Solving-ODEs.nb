(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    279365,       6231]
NotebookOptionsPosition[    269388,       5921]
NotebookOutlinePosition[    269732,       5936]
CellTagsIndexPosition[    269689,       5933]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Solution CP-3: ", "Section"],
 "Solving ordinary differential equations (ODEs)"
}], "Section",
 CellChangeTimes->{
  3.6811903117435975`*^9, {3.681283715559988*^9, 3.6812837474815617`*^9}, {
   3.6820770572067213`*^9, 3.6820770612379894`*^9}, {3.6820775615823145`*^9, 
   3.682077593629252*^9}}],

Cell[TextData[{
 "\[Section]5 of the Mathematica tutorial shows how Mathematica can be used \
to analyze an",
 StyleBox[" ordinary differential equation (ODE)",
  FontWeight->"Bold"],
 ". Here we illustrate this material by means of a familiar example, the \
kinetics of a drug that is supplied continuously by infusion."
}], "Text",
 CellChangeTimes->{
  3.6811899841527767`*^9, {3.6811901075169578`*^9, 3.681190112079633*^9}, 
   3.6812837629821787`*^9, 3.682077291472601*^9, {3.682151141759592*^9, 
   3.682151218497212*^9}, 3.6821831818509336`*^9}],

Cell["As usual, we first clear the memory of Mathematica:", "Text",
 CellChangeTimes->{{3.6811900156227427`*^9, 3.6811900808909283`*^9}, {
  3.681283805874549*^9, 3.6812838109997773`*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6794817104855804`*^9, 3.6794817118809395`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Introduction: Solving and analyzing differential equations with Mathematica\
\>", "Subsection",
 CellChangeTimes->{
  3.681190874062151*^9, {3.6811940053288784`*^9, 3.6811940085946293`*^9}, {
   3.6821568349344997`*^9, 3.6821568435281577`*^9}, {3.682158760158572*^9, 
   3.6821587713304615`*^9}, {3.682158860158708*^9, 3.682158862252458*^9}, {
   3.682166285954384*^9, 3.682166302157628*^9}}],

Cell[TextData[{
 "We consider the ODE describing the kinetics of a drug that is continuously \
supplied by infusion. The ODE is given by: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "m"}], 
     RowBox[{"\[DifferentialD]", "t"}]], "=", 
    RowBox[{
     RowBox[{"f", "(", "m", ")"}], "=", 
     RowBox[{
      FractionBox["1", "B"], 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "-", 
        RowBox[{"\[Beta]", "\[CenterDot]", "m"}]}], ")"}]}]}]}], 
   TraditionalForm]]],
 "\n",
 StyleBox["m(t)",
  FontSlant->"Italic"],
 " = concentration of medicine in blood (mg/liter), \n",
 StyleBox["B",
  FontSlant->"Italic"],
 " = total amount of blood (in liters), \n\[Alpha] = infusion rate (mg/min), \
\n\[Beta] = amount of blood being purged in the kidneys (liters/hour).\n\n\
Work systematically through the following sections of the notebook by \
executing the commands one by one:"
}], "Text",
 CellChangeTimes->{{3.681190906782179*^9, 3.681190926923607*^9}, {
  3.6811911295876865`*^9, 3.6811911360410604`*^9}, {3.681191250217345*^9, 
  3.6811912535299735`*^9}, {3.681191300016143*^9, 3.6811913048444557`*^9}, {
  3.681191339861437*^9, 3.6811913482680073`*^9}, {3.681191410161023*^9, 
  3.681191439380902*^9}, {3.6821513063758698`*^9, 3.68215144607861*^9}, {
  3.682154314489502*^9, 3.6821543204738417`*^9}, {3.6821831739608846`*^9, 
  3.682183175186203*^9}}],

Cell[CellGroupData[{

Cell["Quantitative analysis I: Analytical solution of an ODE", "Subsubsection",
 CellChangeTimes->{{3.682157465772401*^9, 3.682157490834939*^9}, {
  3.68215878781483*^9, 3.6821587887367506`*^9}, {3.6821662613919573`*^9, 
  3.6821662770169744`*^9}}],

Cell["The ODE can be entered as follows:", "Text",
 CellChangeTimes->{{3.681191462991148*^9, 3.681191482304438*^9}, {
  3.6811915172745113`*^9, 3.6811915985432997`*^9}, {3.6821543260989065`*^9, 
  3.6821543286457844`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"m", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "B"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"alpha", "-", 
      RowBox[{"beta", "*", 
       RowBox[{"m", "[", "t", "]"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6811916043403587`*^9, 3.6811916582331047`*^9}, {
  3.682154347270805*^9, 3.6821544206615124`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["m", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{"alpha", "-", 
    RowBox[{"beta", " ", 
     RowBox[{"m", "[", "t", "]"}]}]}], "B"]}]], "Output",
 CellChangeTimes->{
  3.682154422645893*^9, 3.682155056269409*^9, {3.682156480715252*^9, 
   3.682156497621591*^9}}]
}, Open  ]],

Cell[TextData[{
 "First, we derive the ",
 StyleBox["general solution",
  FontWeight->"Bold"],
 " of the ODE. To do this, we use the ",
 StyleBox["DSolveValue[ode, expr, var]", "Program"],
 " command:"
}], "Text",
 CellChangeTimes->{{3.681191764799721*^9, 3.6811917937852163`*^9}, {
  3.682154443286436*^9, 3.6821544921459675`*^9}, {3.682154694628437*^9, 
  3.682154716519068*^9}, {3.682156406215251*^9, 3.682156414668393*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solGen", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{"ode", ",", 
    RowBox[{"m", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6811918177079744`*^9, 3.681191842505845*^9}, {
  3.6821545082084656`*^9, 3.682154542349104*^9}, {3.6821546868940077`*^9, 
  3.6821546886909275`*^9}, {3.6821551221132727`*^9, 3.6821551254101453`*^9}, {
  3.682155284218768*^9, 3.682155286921896*^9}, {3.682156419605918*^9, 
  3.6821564206683855`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["alpha", "beta"], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"beta", " ", "t"}], "B"]}]], " ", 
   RowBox[{"C", "[", "1", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.682154534911562*^9, 3.6821545440990868`*^9}, 
   3.6821546899253035`*^9, 3.682154969878641*^9, 3.6821550600662823`*^9, 
   3.6821551272538657`*^9, 3.6821552872813244`*^9, 3.6821564228558903`*^9, 
   3.682156502121566*^9}]
}, Open  ]],

Cell[TextData[{
 "Although the ODE contains a number of unspecified parameters (B, \[Alpha], \
\[Beta]), Mathematica has no problem to find the general solution. This \
solution still contains the arbitrary constant C[1]. In general, we recommend \
to specify some general initial conditions like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", "(", "0", ")"}], "=", 
    SubscriptBox["m", "0"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", since Mathematica then gives the solution in a more useful form, showing \
directly how the solution depends on the initial conditions. To this end, the \
command ",
 StyleBox["DSolveValue[{ode, init}, expr, var]", "Program"],
 " should be used:"
}], "Text",
 CellChangeTimes->{{3.6811918555375624`*^9, 3.6811918955703983`*^9}, {
  3.6821545982085314`*^9, 3.68215466150338*^9}, {3.6821547380659866`*^9, 
  3.6821547467534924`*^9}, {3.6821564330278006`*^9, 3.6821564339653015`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"m", "[", "0", "]"}], "\[Equal]", "m0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"solSpec", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", "init"}], "}"}], ",", 
    RowBox[{"m", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6811919013987074`*^9, 3.681191903680067*^9}, {
  3.6821547633315344`*^9, 3.6821548861598983`*^9}, {3.682155141722583*^9, 
  3.6821551728320937`*^9}, {3.6821552900313325`*^9, 3.6821552913749824`*^9}, {
  3.6821564382934313`*^9, 3.68215643918406*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"beta", " ", "t"}], "B"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "alpha"}], "+", 
     RowBox[{"alpha", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"beta", " ", "t"}], "B"]]}], "+", 
     RowBox[{"beta", " ", "m0"}]}], ")"}]}], "beta"]], "Output",
 CellChangeTimes->{{3.682154806987875*^9, 3.682154820175396*^9}, {
   3.6821548634879336`*^9, 3.682154888878602*^9}, 3.682154972753686*^9, 
   3.6821550639100285`*^9, {3.682155160097644*^9, 3.6821551739882975`*^9}, 
   3.6821552934844303`*^9, 3.6821564421058903`*^9, 3.6821565073246574`*^9}]
}, Open  ]],

Cell[TextData[{
 "We are usually interested in the special case that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", "(", "0", ")"}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", i.e. the case that there is no drug in the bloodstream at the moment the \
infusion starts. This can be either done by specifying ",
 StyleBox["m0=0", "Program"],
 " or with the help of the substitute command:"
}], "Text",
 CellChangeTimes->{
  3.681191918586892*^9, {3.682155197738327*^9, 3.6821552656719203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol0", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", 
      RowBox[{"init", "/.", 
       RowBox[{"m0", "\[Rule]", "0"}]}]}], "}"}], ",", 
    RowBox[{"m", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6811919604166207`*^9, 3.6811919844800816`*^9}, {
  3.682155305484475*^9, 3.6821553544532795`*^9}, {3.682156446887191*^9, 
  3.682156448121522*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"alpha", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"beta", " ", "t"}], "B"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"beta", " ", "t"}], "B"]]}], ")"}]}], "beta"]], "Output",
 CellChangeTimes->{3.682155357296974*^9, 3.682156448746483*^9, 
  3.682156513480977*^9}]
}, Open  ]],

Cell[TextData[{
 "In practice, we often want to get quantitative information about the \
process that is modelled by the ODE. For example, we might want to know the \
concentration of the drug in the bloodstream after 24 hours or the \
concentration ultimately reached after a long period of time. We also might \
wish to plot the concentration as a function of time. For all this, we first \
have to specify the parameters \[Alpha], \[Beta] and B in the ODE, ",
 StyleBox["e.g. ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Alpha]", "=", "0.6"}], ",", " ", 
    RowBox[{"\[Beta]", "=", "0.3"}], ",", " ", 
    RowBox[{"B", "=", "5"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Then the solution is given by:"
}], "Text",
 CellChangeTimes->{{3.6811920073246746`*^9, 3.681192086608987*^9}, {
  3.682155439797078*^9, 3.6821555192455034`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "5"}], ";"}], "\[IndentingNewLine]", "sol0"}], "Input",
 CellChangeTimes->{{3.6811921037503133`*^9, 3.681192115031998*^9}, {
  3.6821555438080564`*^9, 3.682155573526827*^9}}],

Cell[BoxData[
 RowBox[{"2.`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "0.06`"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"0.06`", " ", "t"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.682155575589386*^9, 3.6821564536996427`*^9, 
  3.6821565187153616`*^9}]
}, Open  ]],

Cell["Let us first plot the solution for 100 timesteps:", "Text",
 CellChangeTimes->{{3.6821556586987085`*^9, 3.6821557116519966`*^9}, 
   3.6821565816373415`*^9, {3.6821566483249164`*^9, 3.6821566691530485`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"sol0", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6821565631060705`*^9, 3.682156572027956*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV0n0w1HkcB3BP56m2uetBm0qR4pptVORcjs8nic3Deoh8N6c2ym5RCKkj
OTXk0pIerhJ7IltKuGLaItlyqtMxOxUtI3Skh2XDYq3d3/3uj8+85zWf+cy8
//hYR8YF7zXQ09Pzp+f/tMnTlhZbNblXVNfnBsblu3sniM0OCETgZjx/vHbZ
QQjqY+XZC6rgmPR4XgQzHbZfHgkyFjTC7XO/MyzMhUBUgY4qfhscfuE6IlMU
AbdUv+wL/x1sPaEybauthB3T3J+H+CPQe+ToUJJ3A8hXZrkM8ingjHPU1gmt
cD1VX2cY8S2qlNWb+7q6gHFXVCUOYKKhSOd7XPgernrNGKxjLMcXQ2ruieQh
KI7MfG/hbYtn9LL0e1YrwK3kw57nLvaY2Jw7S52lhGfC8kKj4yz0iBztrowa
BXn07oLrZC3WLNpx/g01BqKFu+yq/Ndj6lnrZRtDVCAXmS3Uxjph+ZpSUeeV
CYiSrAhbJ3BG3plOScyNSShKjcUYrgveD8rhhZ2bAv8FkSc/Jm3Egk7JGmay
GnyxhcmJ/Qln5KMm6Q7T0Ojx1mTyjDsmSYjYoX8aRidmt8uCEa3MNjU8SNMA
a8FezyK/TVh4Ublz94wGrEXzBnPCPfBK8L3ukcMz0PBVXbWPbMaWqq+llt0z
ML/aWRyz3xP7Oc1cPTctPJGaJ8anbMFUY9e4J/lasCy24AsOeWGdg61m+LUW
WANHTmVmemPWKrYHm6mDgfG5srwMNvr0ukvMAnQwQTyVoqNbsdnC1KIxXQdS
+1ZXWbYP/nvoQu252zrY0HS6avKEL/pV7luyX6aDqOaSQLjgh7xvTn+5PaGD
T0sD/sop8cdyxUidiQUFTHDa01LIwaeOlasUDhTot8Y52N0KwHnJoc9b2BQ8
y0/4zi0kEHPSOn7xjaCgfuCwit8eiH82DApZcRQI4+2UK8KC8M6pVE14BgV3
342lv30VhGkd7IpcIQV1J2Nsl0cEo/y8ucruKgWMOVQErzsY94h3ciPFFORv
6tG34W7DLkf78NU1FCgrBPVJvdswe92v48IHFJRNzZnVtDME1XiDCpBSsCGN
F1/8IQRrm8dvNTynYOymFrQHQvHZvISG79spMKqvKw39HIqcQ/KjKa/pveFi
K0jcjsc6TZcK5fT92kKWzeh2tJpIcWrqoaDUmH8962AY+uQWmOzvp2Bkbo9T
mioMORn/sIYHKMgzTCAxiQSNlubuej1EgaeBoqIomeBDK1lBH+0pvX3athSC
v/nfalTQ5ul415zSCP0/tsbGHylYrw78oj1JMJtZ4OVM+83w2oz8iwT7L22+
dIG2lVwprpUQLHSZdTHgEwWyztjpDw8JdqxcYRBOO7tjyM/yEUGvlT8Iomkr
X/V+TZcSnDLi2RyjLW1rd2X/TTCugBFQQTu6ubpN3k33bT2fa/iZAsunLBvG
O4KGkYOX59Buk95Igj6CN8f2liyi7fL4j0VlAwRf+miKHWibP8yPOjBMsNf5
VUg47UeS2XUiJcFhm8+O0bQT758ylY0SXBzFZiTQ7q7NqHSeJPhY0Xcni3b+
vRlKoCbo4Wqbcpb2lrtHggs1BLv67/94lfZ0zXjZSy3BJf3XJspp36mOn6Qo
ghqngcoa2v8B2r50ow==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {0., 1.9950424950396257`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.682156574027899*^9}],

Cell["\<\
From the graph, we see that the concentration converges asymptotically to the \
value 2 mg/liter, and that after 24 hours the concentration is approximately \
1.5 mg/liter. We can confirm this by direct calculation:\
\>", "Text",
 CellChangeTimes->{{3.682156686449941*^9, 3.6821566908874636`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol0", "/.", 
  RowBox[{"t", "\[Rule]", "24"}]}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"sol0", ",", 
   RowBox[{"t", "->", "Infinity"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6821567210749416`*^9, 3.6821567832000666`*^9}}],

Cell[BoxData["1.5261444826357562`"], "Output",
 CellChangeTimes->{
  3.68215673324679*^9, {3.6821567690593247`*^9, 3.682156784903131*^9}}],

Cell[BoxData["2.`"], "Output",
 CellChangeTimes->{
  3.68215673324679*^9, {3.6821567690593247`*^9, 3.682156784903131*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Quantitative analysis II: Numerical solution of an ODE", "Subsubsection",
 CellChangeTimes->{{3.682157465772401*^9, 3.6821575161943216`*^9}, 
   3.6821587907679553`*^9, {3.682166267766965*^9, 3.6821662744232225`*^9}}],

Cell[TextData[{
 "The ODE in our example is simple enough to be solvable analytically. \
Unfortunately, even simple-looking ODEs do often not have a \
\[OpenCurlyQuote]nice\[CloseCurlyQuote] analytical solution. Fortunately, \
Mathematica is able to calculate an ",
 StyleBox["approximate solution",
  FontWeight->"Bold"],
 " even for such cases. Such a \[OpenCurlyQuote]numeric solution\
\[CloseCurlyQuote] is obtained by using the \[OpenCurlyQuote]numeric\
\[CloseCurlyQuote] version of the command: ",
 StyleBox["NDSolveValue[]", "Program"],
 ". As explained in \[Section]5.2 of the Mathematica Tutorial, this only \
works if all parameters have been assigned numerical values. Let us restart, \
enter the ODE, specify all parameters and calculate the numerical solution of \
our ODE:"
}], "Text",
 CellChangeTimes->{{3.681191462991148*^9, 3.681191482304438*^9}, {
  3.6811915172745113`*^9, 3.6811915985432997`*^9}, {3.6821543260989065`*^9, 
  3.6821543286457844`*^9}, {3.6821575436005774`*^9, 3.6821576525382013`*^9}, {
  3.682157692194539*^9, 3.6821576939757843`*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6821577348508368`*^9, 3.6821577359445453`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ode", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"m", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "B"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"alpha", "-", 
       RowBox[{"beta", "*", 
        RowBox[{"m", "[", "t", "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"m", "[", "0", "]"}], "\[Equal]", "m0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solNum", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", 
      RowBox[{"init", "/.", 
       RowBox[{"m0", "\[Rule]", "0"}]}]}], "}"}], ",", 
    RowBox[{"m", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6811916043403587`*^9, 3.6811916582331047`*^9}, {
  3.682154347270805*^9, 3.6821544206615124`*^9}, {3.6821577182883034`*^9, 
  3.68215778575713*^9}, {3.682157824335312*^9, 3.6821578328978243`*^9}, {
  3.682157876694745*^9, 3.68215788286663*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AAmSBa0yLPvBdXF00
Ffo/6N0rWpraxz/OO7mkBi4LQHrl9vDgmtc/ZDHLW8wwFECF/+jXFrngP0XB
TstvqRpAqfoiYK8Y5T8alh9oPtcgQJXtqg5hYuk/GlLMUc4dJEASzyF1n//s
P6F7LwaTqidAMNjHUmhE8D9aI53txCYrQHFo0hQ+1PE/nFE/PABnLkB3O2iE
VyXzP7P2yyq49jBAMRm8+5Jv9D/chxLr9JsyQF5x7o7ihfU/H1jeROg4NEAQ
oPfCTn32PyVfBQT2+DVAVcht0ANw9z9vqcZ2CJs3QPuxH5GcPPg/fSrjTjVg
OUBGzr3W3wT5P6TqhMAYHTtAX9uIHNW1+T8P7sDlALw8QPHYSOoJS/o/PihY
cAN+PkBCcQ3kR936P9jSRFcFEUBAP8l+d4pY+z/zLAsplvRAQIrMY14X0fs/
miaURwLUQUCR2Lm4kjv8P+RB6r9wpEJAgpn6LliV/D+P+O1qbIZDQGHTdO5B
7fw/3NC+b2pZREBsHzT6Vzf9P7ZIUsFDKEVAr+BDKzN5/T/yW5NFqghGQPGN
gz/Huf0/0JChIxPaRkBn9E39NvD9PxBhXTQJvUdAe2/1MXsl/j/c0NuR2ptI
QCdueKmKVP4/SmInSa5rSUB3hJOHOHz+PxqPIDMPTUpA5MjxGBmj/j+M3eZ2
ch9LQEFEeEDdw/4/i8tvB7HtS0C6fFcn/+D+P+xUpsp8zUxAMWhwJ5T9/j/v
/6nnSp5NQGaJ9cSsFf8/VEZbN6aATkC2PZduQy3/P1uu2eADVE9A5TbweSRB
/z/4Wo1rnhFQQD78XBLPUv8/c6wEgAGCUEAS3YUFIWT/P7+OYsHl6lBAmFG0
Arpy/z+7PheckFxRQIllodwBgf8/fj4tHSnMUUCvGE4fn43/PxLPKctCNFJA
niYz10GY/z9XLX0SI6VSQC3/+pWsov8/bRy3hoQOU0CNUt8ldKv/P0lbUqHT
dVNAgfTOBEKz/z/WZ0RV6eVTQGS4TLXpuv8/NAUdNoBOVEAfGxyIXcH/P0Nw
TLDdv1RAbgjfSK7H/z8YK93QKC9VQFzv/71Czf8/vnZUHvWWVUDdc38299H/
PxWQIgWIB1ZAByFOjJPW/z89OtcYnHBWQPkBIGt22v8/FrLixXbiVkApGZ5E
Q97/P7V5Txk/UldAxqEPkJ7h/z8m0qKZiLpXQJY+nvRy5P8/R/hMs5grWEDs
kLtKOOf/Pzmv3fkplVhA1toGEY7p/z8+GeT4//9YQD6vg62x6/8/DurQVQ==

                    "]]}}}, {}}, {
                DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                 PlotRange -> {{0., 100.}, {0., 1.9950424936204878`}}, 
                 PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AAmSBa0yLPvBdXF00
Ffo/6N0rWpraxz/OO7mkBi4LQHrl9vDgmtc/ZDHLW8wwFECF/+jXFrngP0XB
TstvqRpAqfoiYK8Y5T8alh9oPtcgQJXtqg5hYuk/GlLMUc4dJEASzyF1n//s
P6F7LwaTqidAMNjHUmhE8D9aI53txCYrQHFo0hQ+1PE/nFE/PABnLkB3O2iE
VyXzP7P2yyq49jBAMRm8+5Jv9D/chxLr9JsyQF5x7o7ihfU/H1jeROg4NEAQ
oPfCTn32PyVfBQT2+DVAVcht0ANw9z9vqcZ2CJs3QPuxH5GcPPg/fSrjTjVg
OUBGzr3W3wT5P6TqhMAYHTtAX9uIHNW1+T8P7sDlALw8QPHYSOoJS/o/PihY
cAN+PkBCcQ3kR936P9jSRFcFEUBAP8l+d4pY+z/zLAsplvRAQIrMY14X0fs/
miaURwLUQUCR2Lm4kjv8P+RB6r9wpEJAgpn6LliV/D+P+O1qbIZDQGHTdO5B
7fw/3NC+b2pZREBsHzT6Vzf9P7ZIUsFDKEVAr+BDKzN5/T/yW5NFqghGQPGN
gz/Huf0/0JChIxPaRkBn9E39NvD9PxBhXTQJvUdAe2/1MXsl/j/c0NuR2ptI
QCdueKmKVP4/SmInSa5rSUB3hJOHOHz+PxqPIDMPTUpA5MjxGBmj/j+M3eZ2
ch9LQEFEeEDdw/4/i8tvB7HtS0C6fFcn/+D+P+xUpsp8zUxAMWhwJ5T9/j/v
/6nnSp5NQGaJ9cSsFf8/VEZbN6aATkC2PZduQy3/P1uu2eADVE9A5TbweSRB
/z/4Wo1rnhFQQD78XBLPUv8/c6wEgAGCUEAS3YUFIWT/P7+OYsHl6lBAmFG0
Arpy/z+7PheckFxRQIllodwBgf8/fj4tHSnMUUCvGE4fn43/PxLPKctCNFJA
niYz10GY/z9XLX0SI6VSQC3/+pWsov8/bRy3hoQOU0CNUt8ldKv/P0lbUqHT
dVNAgfTOBEKz/z/WZ0RV6eVTQGS4TLXpuv8/NAUdNoBOVEAfGxyIXcH/P0Nw
TLDdv1RAbgjfSK7H/z8YK93QKC9VQFzv/71Czf8/vnZUHvWWVUDdc38299H/
PxWQIgWIB1ZAByFOjJPW/z89OtcYnHBWQPkBIGt22v8/FrLixXbiVkApGZ5E
Q97/P7V5Txk/UldAxqEPkJ7h/z8m0qKZiLpXQJY+nvRy5P8/R/hMs5grWEDs
kLtKOOf/Pzmv3fkplVhA1toGEY7p/z8+GeT4//9YQD6vg62x6/8/DurQVQ==

                    "]]}}}, {}}, {
                DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                 PlotRange -> {{0., 100.}, {0., 1.9950424936204878`}}, 
                 PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{
  3.682154422645893*^9, 3.682155056269409*^9, {3.682156480715252*^9, 
   3.682156497621591*^9}, 3.6821578414758787`*^9, 3.6821578874759064`*^9}]
}, Open  ]],

Cell["\<\
The output is not very rewarding and recognizable, but you can in fact plot a \
graph of it:\
\>", "Text",
 CellChangeTimes->{{3.681191764799721*^9, 3.6811917937852163`*^9}, {
  3.682154443286436*^9, 3.6821544921459675`*^9}, {3.682154694628437*^9, 
  3.682154716519068*^9}, {3.682156406215251*^9, 3.682156414668393*^9}, {
  3.6821579265072117`*^9, 3.6821579281166773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"solNum", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6811918177079744`*^9, 3.681191842505845*^9}, {
  3.6821545082084656`*^9, 3.682154542349104*^9}, {3.6821546868940077`*^9, 
  3.6821546886909275`*^9}, {3.6821551221132727`*^9, 3.6821551254101453`*^9}, {
  3.682155284218768*^9, 3.682155286921896*^9}, {3.682156419605918*^9, 
  3.6821564206683855`*^9}, {3.6821579601010914`*^9, 3.68215796755412*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVzX8w1HkYB/D14yqiqVxoGyq5S2bnSNq2wvMQ0UWWZL+SEmU3S35GXc6Z
7PkxHfaUpktrDyvO0XLK3FYUnYvqjtnSj82ROiG/NlryY/dz3/vjmWde837e
86yPiAs8rs9gMPzo+X/bFGjLS6xb3Bju2hBunNjNO6HSKFYghYN7FJk31p6E
gH5WgZ1ADrkW34SGWaZD8E8TAYsEdyGxJqPG3DgfKA13i4bfCbfyLnGVYxII
KdeTjfL7YHKFJvfvm7VwcC7k0BB/AoRWN6qSvZtA9UUW5x2fAHv0q3/WJzyG
irN6OoOw5WjdUcruf/UKTBuk8kp/S5x/uNXzu/y3cHX3gv5m03V45MnlwMxT
Q1ASce6tubct6tJdtvXaj4Fr6eCxDo4dLl2+xns2Sw3t+deKDb9joUlDptX1
yElQRR0trKAc8QlnqvYZmQKpxZGNcj8nPNg3Y7MjSAMqqZGFNsYZhefNFC+u
TEOkYgNvs4CN7UluzcKqGZCcjUFhCAfXDjJjeRc+gd+qCNFw8g5UJS3xsDw1
C3vxgeW+GBdsX6dwSneYg7seLxfP5LnhMZP6Jw5v5mBy2qRLGYg4m6wevZU2
D6xVxz0lvu4oGukpOrowD+ulZu9yQz0wJ9gqUJ2yAE0fZuUnqF1Y9pukjdmz
AJ/XsSuF0Z4YkOgVwXDVwv1W46T4VC/UWDRX3xdrgVlizhck7sZtxoauE91a
YA2czjl3zhtH2lx4PpY6GPi4UlmQ4YMFTGgx8tfBNOWplp7Zg2XdRp5303XQ
avd4pzL7a3w9d091oUYHW1vOy2cy96KZU/vaaKUOIttKuVDki4l5ox9rpnXw
3sr/z9xSP3TySJpebE7AEpyPPSjeh3IqmzXmQEDvcZzDxl/90UzoMfTAh0C7
OGGFaxAXBXVpxXvDCNwZSNHwu7hIdhQVsuII5MdvVG/gBeDtXfZWhzIINPRN
pb98GoAPJ3zlP+QTaBQJbdeFBeIF9yx9u6sETJeRsPCeQAzz6ouJqCQgdu/V
swnZj9RzZqh9PQF1teBO8uv9SFhdnxXcIiD7tGxpy+EgTBn0NOS2EtiaFh5f
MhiEsk1NdU0dBKZ+0YI29gDafx/dsamLgOGdxvIDIwcwmxd+JrWbzg3WWENS
ML6NKrTNV9F9x2KWzWQwjld4bG/pJVC+iF+RdZKHz8dcjKLfEJhY2eucpuGh
iOPqOD5AoMAggRImURhVNRzePUTAU3+sWnKKQpmT/8V+2p8YJ7SdqRSmhnu3
jNEO14WXOadRmFW+sHjRMAGnWe6oVkThqLzbh0372bhjhvgShcNfri4uom2t
UlfeVFDIbJRe9n9PQPkiZm7wNoVmq2SGobSznw/5Mpvp/kJZdBRt9dPXH9Jb
KRyJlNh+S7u1s2unzyMKFal93GraUW11naoeCivm4/IMRggw/2DZmPZRKBKV
XVlGu7O1Khn66f85BmWraXPu/bxaNkChmnFY6kDb+LY4MnacwsJLnUGhtJsV
Jo1SNYW7/+3aEkU76fecJcpJCpXXmKYJtHtuZtSyZyi0yb54PYu2+MYCEcxS
yNnwKOVH2l4NpwOL5+l7R972q7Tn6j/K/tJSaDmxc/oa7et18TOEUMiWpNXW
0/4PQRxvAA==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {0., 1.9950424935175994`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682154534911562*^9, 3.6821545440990868`*^9}, 
   3.6821546899253035`*^9, 3.682154969878641*^9, 3.6821550600662823`*^9, 
   3.6821551272538657`*^9, 3.6821552872813244`*^9, 3.6821564228558903`*^9, 
   3.682156502121566*^9, 3.682157972554164*^9}]
}, Open  ]],

Cell[TextData[{
 "As you see, the graph of the numerical solution is virtually identical to \
that of the analytical solution produced above. We can still obtain numerical \
values, ",
 StyleBox["e.g.",
  FontSlant->"Italic"],
 " the concentration of the drug after 24 hours:"
}], "Text",
 CellChangeTimes->{{3.6811918555375624`*^9, 3.6811918955703983`*^9}, {
   3.6821545982085314`*^9, 3.68215466150338*^9}, {3.6821547380659866`*^9, 
   3.6821547467534924`*^9}, {3.6821564330278006`*^9, 3.6821564339653015`*^9}, 
   3.6821580476011868`*^9, {3.682158142382468*^9, 3.682158151679392*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solNum", "/.", 
  RowBox[{"t", "\[Rule]", "24"}]}]], "Input",
 CellChangeTimes->{{3.6811919013987074`*^9, 3.681191903680067*^9}, {
   3.6821547633315344`*^9, 3.6821548861598983`*^9}, {3.682155141722583*^9, 
   3.6821551728320937`*^9}, {3.6821552900313325`*^9, 
   3.6821552913749824`*^9}, {3.6821564382934313`*^9, 3.68215643918406*^9}, {
   3.6821580709449444`*^9, 3.6821580845074778`*^9}, 3.682158133695017*^9}],

Cell[BoxData["1.5261446986042986`"], "Output",
 CellChangeTimes->{{3.682154806987875*^9, 3.682154820175396*^9}, {
   3.6821548634879336`*^9, 3.682154888878602*^9}, 3.682154972753686*^9, 
   3.6821550639100285`*^9, {3.682155160097644*^9, 3.6821551739882975`*^9}, 
   3.6821552934844303`*^9, 3.6821564421058903`*^9, 3.6821565073246574`*^9, {
   3.6821580760699377`*^9, 3.6821580884136667`*^9}, 3.6821581353824735`*^9}]
}, Open  ]],

Cell["\<\
Let us now check whether we can also use the numerical solution for obtaining \
the limit concentration after a long period of time:\
\>", "Text",
 CellChangeTimes->{{3.682156686449941*^9, 3.6821566908874636`*^9}, 
   3.682158244476353*^9, {3.6821582862517977`*^9, 3.6821582928299336`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"solNum", ",", 
   RowBox[{"t", "->", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6821567210749416`*^9, 3.6821567832000666`*^9}, {
  3.6821581147575116`*^9, 3.682158115210637*^9}, {3.682158168382574*^9, 
  3.6821581729138265`*^9}}],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AAmSBa0yLPvBdXF00
Ffo/6N0rWpraxz/OO7mkBi4LQHrl9vDgmtc/ZDHLW8wwFECF/+jXFrngP0XB
TstvqRpAqfoiYK8Y5T8alh9oPtcgQJXtqg5hYuk/GlLMUc4dJEASzyF1n//s
P6F7LwaTqidAMNjHUmhE8D9aI53txCYrQHFo0hQ+1PE/nFE/PABnLkB3O2iE
VyXzP7P2yyq49jBAMRm8+5Jv9D/chxLr9JsyQF5x7o7ihfU/H1jeROg4NEAQ
oPfCTn32PyVfBQT2+DVAVcht0ANw9z9vqcZ2CJs3QPuxH5GcPPg/fSrjTjVg
OUBGzr3W3wT5P6TqhMAYHTtAX9uIHNW1+T8P7sDlALw8QPHYSOoJS/o/PihY
cAN+PkBCcQ3kR936P9jSRFcFEUBAP8l+d4pY+z/zLAsplvRAQIrMY14X0fs/
miaURwLUQUCR2Lm4kjv8P+RB6r9wpEJAgpn6LliV/D+P+O1qbIZDQGHTdO5B
7fw/3NC+b2pZREBsHzT6Vzf9P7ZIUsFDKEVAr+BDKzN5/T/yW5NFqghGQPGN
gz/Huf0/0JChIxPaRkBn9E39NvD9PxBhXTQJvUdAe2/1MXsl/j/c0NuR2ptI
QCdueKmKVP4/SmInSa5rSUB3hJOHOHz+PxqPIDMPTUpA5MjxGBmj/j+M3eZ2
ch9LQEFEeEDdw/4/i8tvB7HtS0C6fFcn/+D+P+xUpsp8zUxAMWhwJ5T9/j/v
/6nnSp5NQGaJ9cSsFf8/VEZbN6aATkC2PZduQy3/P1uu2eADVE9A5TbweSRB
/z/4Wo1rnhFQQD78XBLPUv8/c6wEgAGCUEAS3YUFIWT/P7+OYsHl6lBAmFG0
Arpy/z+7PheckFxRQIllodwBgf8/fj4tHSnMUUCvGE4fn43/PxLPKctCNFJA
niYz10GY/z9XLX0SI6VSQC3/+pWsov8/bRy3hoQOU0CNUt8ldKv/P0lbUqHT
dVNAgfTOBEKz/z/WZ0RV6eVTQGS4TLXpuv8/NAUdNoBOVEAfGxyIXcH/P0Nw
TLDdv1RAbgjfSK7H/z8YK93QKC9VQFzv/71Czf8/vnZUHvWWVUDdc38299H/
PxWQIgWIB1ZAByFOjJPW/z89OtcYnHBWQPkBIGt22v8/FrLixXbiVkApGZ5E
Q97/P7V5Txk/UldAxqEPkJ7h/z8m0qKZiLpXQJY+nvRy5P8/R/hMs5grWEDs
kLtKOOf/Pzmv3fkplVhA1toGEY7p/z8+GeT4//9YQD6vg62x6/8/DurQVQ==

                    "]]}}}, {}}, {
                  DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                   PlotRange -> {{0., 100.}, {0., 1.9950424936204878`}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4AAmSBa0yLPvBdXF00
Ffo/6N0rWpraxz/OO7mkBi4LQHrl9vDgmtc/ZDHLW8wwFECF/+jXFrngP0XB
TstvqRpAqfoiYK8Y5T8alh9oPtcgQJXtqg5hYuk/GlLMUc4dJEASzyF1n//s
P6F7LwaTqidAMNjHUmhE8D9aI53txCYrQHFo0hQ+1PE/nFE/PABnLkB3O2iE
VyXzP7P2yyq49jBAMRm8+5Jv9D/chxLr9JsyQF5x7o7ihfU/H1jeROg4NEAQ
oPfCTn32PyVfBQT2+DVAVcht0ANw9z9vqcZ2CJs3QPuxH5GcPPg/fSrjTjVg
OUBGzr3W3wT5P6TqhMAYHTtAX9uIHNW1+T8P7sDlALw8QPHYSOoJS/o/PihY
cAN+PkBCcQ3kR936P9jSRFcFEUBAP8l+d4pY+z/zLAsplvRAQIrMY14X0fs/
miaURwLUQUCR2Lm4kjv8P+RB6r9wpEJAgpn6LliV/D+P+O1qbIZDQGHTdO5B
7fw/3NC+b2pZREBsHzT6Vzf9P7ZIUsFDKEVAr+BDKzN5/T/yW5NFqghGQPGN
gz/Huf0/0JChIxPaRkBn9E39NvD9PxBhXTQJvUdAe2/1MXsl/j/c0NuR2ptI
QCdueKmKVP4/SmInSa5rSUB3hJOHOHz+PxqPIDMPTUpA5MjxGBmj/j+M3eZ2
ch9LQEFEeEDdw/4/i8tvB7HtS0C6fFcn/+D+P+xUpsp8zUxAMWhwJ5T9/j/v
/6nnSp5NQGaJ9cSsFf8/VEZbN6aATkC2PZduQy3/P1uu2eADVE9A5TbweSRB
/z/4Wo1rnhFQQD78XBLPUv8/c6wEgAGCUEAS3YUFIWT/P7+OYsHl6lBAmFG0
Arpy/z+7PheckFxRQIllodwBgf8/fj4tHSnMUUCvGE4fn43/PxLPKctCNFJA
niYz10GY/z9XLX0SI6VSQC3/+pWsov8/bRy3hoQOU0CNUt8ldKv/P0lbUqHT
dVNAgfTOBEKz/z/WZ0RV6eVTQGS4TLXpuv8/NAUdNoBOVEAfGxyIXcH/P0Nw
TLDdv1RAbgjfSK7H/z8YK93QKC9VQFzv/71Czf8/vnZUHvWWVUDdc38299H/
PxWQIgWIB1ZAByFOjJPW/z89OtcYnHBWQPkBIGt22v8/FrLixXbiVkApGZ5E
Q97/P7V5Txk/UldAxqEPkJ7h/z8m0qKZiLpXQJY+nvRy5P8/R/hMs5grWEDs
kLtKOOf/Pzmv3fkplVhA1toGEY7p/z8+GeT4//9YQD6vg62x6/8/DurQVQ==

                    "]]}}}, {}}, {
                  DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                   PlotRange -> {{0., 100.}, {0., 1.9950424936204878`}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "t", "]"}], ",", 
   RowBox[{"t", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.68215673324679*^9, {3.6821567690593247`*^9, 3.682156784903131*^9}, 
   3.6821581202418222`*^9, 3.6821581743981104`*^9}]
}, Open  ]],

Cell["\<\
This does not work. The reason is simple: the numerical solution can only be \
obtained for a finite time interval (in this case [0,100]). Mathematica \
cannot say anything about the asymptotic values for t -> \[Infinity].\
\>", "Text",
 CellChangeTimes->{
  3.6821582608611603`*^9, {3.682158301861206*^9, 3.6821583801581717`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Qualitative analysis: Equilibrium and stability analysis", \
"Subsubsection",
 CellChangeTimes->{{3.6821663849389706`*^9, 3.6821664034077415`*^9}, 
   3.6821664747359495`*^9}],

Cell[TextData[{
 "Let us now perform a qualitative analysis of the ODE,",
 StyleBox[" i.e.",
  FontSlant->"Italic"],
 " let us calculate the equilibria and determine their stability. Since we \
want to do this in full generality, we first have to unassign all the \
parameters (which have given specific values in the previous section).:"
}], "Text",
 CellChangeTimes->{{3.681191462991148*^9, 3.681191482304438*^9}, {
  3.6811915172745113`*^9, 3.6811915985432997`*^9}, {3.6821543260989065`*^9, 
  3.6821543286457844`*^9}, {3.682159084424537*^9, 3.6821590864089565`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"alpha", ",", "beta", ",", "B"}], "]"}]], "Input",
 CellChangeTimes->{{3.6821591149401803`*^9, 3.6821591316746345`*^9}}],

Cell[TextData[{
 "The qualitative analysis of an autonomous ODE ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[DifferentialD]", "z"}], "/", 
     RowBox[{"\[DifferentialD]", "t"}]}], "=", 
    RowBox[{"f", "(", "z", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is based on the investigation of the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " that specifies the right-hand side of the ODE. At an equilibrium, the \
system does not change any more or, equivalently, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[DifferentialD]", "z"}], "/", 
     RowBox[{"\[DifferentialD]", "t"}]}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Hence equilibria are determined by the ",
 StyleBox["equilibrium equation",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SuperscriptBox["z", "*"], ")"}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". To determine the stability of an equilibrium, we take the derivative of ",
 StyleBox["f",
  FontSlant->"Italic"],
 " and fill in the equilibrium ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["z", "*"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". If ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    FormBox[
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], 
       RowBox[{"(", 
        SuperscriptBox["z", "*"], ")"}]}], "<", "0"}],
     TraditionalForm]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 StyleBox["(stability criterion)",
  FontWeight->"Bold"],
 ", the equilibrium is stable; if ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    FormBox[
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], 
       RowBox[{"(", 
        SuperscriptBox["z", "*"], ")"}]}], ">", "0"}],
     TraditionalForm]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the equilibrium is unstable. We start the qualitative analysis by giving \
the right-hand side of our ODE a name: "
}], "Text",
 CellChangeTimes->{
  3.682159162877693*^9, {3.682159229629184*^9, 3.6821592308323064`*^9}, {
   3.6821592759261155`*^9, 3.682159282082385*^9}, {3.682159315160448*^9, 
   3.6821593159417524`*^9}, {3.682159379973074*^9, 3.6821594436606884`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "B"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"alpha", "-", 
     RowBox[{"beta", "*", "m"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6811916043403587`*^9, 3.6811916582331047`*^9}, {
  3.682154347270805*^9, 3.6821544206615124`*^9}, {3.682159476895084*^9, 
  3.6821594923013678`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"alpha", "-", 
   RowBox[{"beta", " ", "m"}]}], "B"]], "Output",
 CellChangeTimes->{
  3.682154422645893*^9, 3.682155056269409*^9, {3.682156480715252*^9, 
   3.682156497621591*^9}, 3.682159770277722*^9}]
}, Open  ]],

Cell[TextData[{
 "Note that we define ",
 StyleBox["f",
  FontSlant->"Italic"],
 " as a function of ",
 StyleBox["m",
  FontSlant->"Italic"],
 ", and not of ",
 StyleBox["m(t)",
  FontSlant->"Italic"],
 ". We use the ",
 StyleBox["Solve[]", "Program"],
 " command to determine the equilibria with the help of the equilibrium \
equation. Then we calculate the derivative of ",
 StyleBox["f",
  FontSlant->"Italic"],
 " with the help of ",
 StyleBox["D[]", "Program"],
 ", we substitute the equilibrium into this derivative, and we store the \
result in the variable ",
 StyleBox["stabCrit", "Program"],
 ". If this stability criterion is negative, the equilibrium is stable, if it \
is positive, the equilibrium is unstable. Here we get:"
}], "Text",
 CellChangeTimes->{{3.681191764799721*^9, 3.6811917937852163`*^9}, {
  3.682154443286436*^9, 3.6821544921459675`*^9}, {3.682154694628437*^9, 
  3.682154716519068*^9}, {3.682156406215251*^9, 3.682156414668393*^9}, {
  3.6821595284419746`*^9, 3.6821595824806395`*^9}, {3.682159624386979*^9, 
  3.682159632199403*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq", "=", 
  RowBox[{"Values", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"f", "\[Equal]", "0"}], ",", "m"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"stabCrit", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"f", ",", "m"}], "]"}], "/.", 
   RowBox[{"m", "\[Rule]", "eq"}]}]}]}], "Input",
 CellChangeTimes->{{3.6811918177079744`*^9, 3.681191842505845*^9}, {
  3.6821545082084656`*^9, 3.682154542349104*^9}, {3.6821546868940077`*^9, 
  3.6821546886909275`*^9}, {3.6821551221132727`*^9, 3.6821551254101453`*^9}, {
  3.682155284218768*^9, 3.682155286921896*^9}, {3.682156419605918*^9, 
  3.6821564206683855`*^9}, {3.6821596473401484`*^9, 3.6821596772776623`*^9}, {
  3.6821597177933493`*^9, 3.682159757590176*^9}, {3.682159788027803*^9, 
  3.682159807605948*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["alpha", "beta"], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.682154534911562*^9, 3.6821545440990868`*^9}, 
   3.6821546899253035`*^9, 3.682154969878641*^9, 3.6821550600662823`*^9, 
   3.6821551272538657`*^9, 3.6821552872813244`*^9, 3.6821564228558903`*^9, 
   3.682156502121566*^9, {3.682159761340205*^9, 3.6821597732620597`*^9}, 
   3.6821598097152257`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["beta", "B"]}]], "Output",
 CellChangeTimes->{{3.682154534911562*^9, 3.6821545440990868`*^9}, 
   3.6821546899253035`*^9, 3.682154969878641*^9, 3.6821550600662823`*^9, 
   3.6821551272538657`*^9, 3.6821552872813244`*^9, 3.6821564228558903`*^9, 
   3.682156502121566*^9, {3.682159761340205*^9, 3.6821597732620597`*^9}, 
   3.6821598097152257`*^9}]
}, Open  ]],

Cell[TextData[{
 "Hence our ODE has exactly one equilibrium (at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["m", "*"], "=", 
    FractionBox["\[Alpha]", "\[Beta]"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "), and this equilibrium is stable since ",
 StyleBox["stabCrit", "Program"],
 " is negative. Let us now apply this to our standard parameter values (\
\[Alpha]=0.6, \[Beta]=0.3, B=5). Let us first assign a name to this parameter \
combination, then plot the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " and calculate the specific value of the equilibrium:"
}], "Text",
 CellChangeTimes->{{3.6811918555375624`*^9, 3.6811918955703983`*^9}, {
  3.6821545982085314`*^9, 3.68215466150338*^9}, {3.6821547380659866`*^9, 
  3.6821547467534924`*^9}, {3.6821564330278006`*^9, 3.6821564339653015`*^9}, {
  3.6821598397934537`*^9, 3.6821598974102197`*^9}, {3.68215993350401*^9, 
  3.6821599613321686`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alpha", "\[Rule]", "0.6"}], ",", 
     RowBox[{"beta", "\[Rule]", "0.3"}], ",", 
     RowBox[{"B", "\[Rule]", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f1", "=", 
  RowBox[{"f", "/.", "param"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"f1", ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "3"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"eq1", "=", 
  RowBox[{"eq", "/.", "param"}]}], "\[IndentingNewLine]", 
 RowBox[{"stabCrit1", "=", 
  RowBox[{"stabCrit", "/.", "param"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"stabCrit1", "<", "0"}], ",", "\"\<stable\>\"", ",", 
   "\"\<unstable\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6811919013987074`*^9, 3.681191903680067*^9}, {
  3.6821547633315344`*^9, 3.6821548861598983`*^9}, {3.682155141722583*^9, 
  3.6821551728320937`*^9}, {3.6821552900313325`*^9, 3.6821552913749824`*^9}, {
  3.6821564382934313`*^9, 3.68215643918406*^9}, {3.682160085785404*^9, 
  3.6821601649573936`*^9}, {3.682160209441818*^9, 3.6821602559887457`*^9}, {
  3.6821603738795023`*^9, 3.6821603802388873`*^9}, {3.6821604191920366`*^9, 
  3.6821604491139617`*^9}, {3.6821611741616287`*^9, 3.6821611945366697`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "5"], " ", 
  RowBox[{"(", 
   RowBox[{"0.6`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.3`", " ", "m"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.682154806987875*^9, 3.682154820175396*^9}, {
   3.6821548634879336`*^9, 3.682154888878602*^9}, 3.682154972753686*^9, 
   3.6821550639100285`*^9, {3.682155160097644*^9, 3.6821551739882975`*^9}, 
   3.6821552934844303`*^9, 3.6821564421058903`*^9, 3.6821565073246574`*^9, {
   3.6821601480666485`*^9, 3.6821601654104576`*^9}, 3.6821602580511475`*^9, 
   3.6821604510045304`*^9, 3.6821611981147385`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVj30803kcwGc2P+dFuZeHjuqEWunxotLris+XdCUtD8U8FS+My6uQpmV6
QGklxJBXdmxoJW3D0O087FseLlcp6jqXp1KyJDKMMnLuj/fr/ef79bYMifZi
kkkkEn2B//3FLarAIzrGkWym6PaUK8BPJ9noGe0A3JypuVNVrQBhJvik046A
S4+EbVKpgCbvQvYxWhSkCAqMXt1RgLecrhtIOwcE7axbMF8BhUdF7QdpGaBv
t7Mu6pwCnJ07qt1phbCEXpt/1UUBORuVt+g0KaxNuufX0t4AekdGVR8iMdgW
Nj1XvKwH7rLwuBqfhxApjOr1H64D7ZZ9raKOpyBnbxm/Rq0DoxZTq1j2C1Bq
Lya76dfCvU9CnweoE3bHcUtKrf8AsVWZwD6gG1L4xihttRwsto1mp4S8hq7r
9YO6P/0OnlwmduL1QxCbbLHG9R40cIzgb/47aNY/7NV2oAYq2w1qFcnvwY/r
vcSEWQ1huSI9k2AlUDp/HVSfrwLUf+b9N+YQXOvOrAjkykB0TViHXIfBrcVH
P1xQCVtatJeZeo+AMnRzqLqkApKOUrwYjM9gW06/vMO/HNbJS51O88dAHcw6
3pEugXXzUYIMgQo4Z5r3nsy/C9Hs7hkP3jgEhXjs8W+9A3urIpYevjEBVBl1
J/3ZbUi81UgT8Ceh8+6YS+xrEcw+atqUnqYG3ZglJ3oMb4JB1cBcc9YUaAoi
sr2WFkPIk7t/laZMg/v1iX8N9gjBtMApsZH1BfJORDKnpn+DoM3TmlWnv4J5
KqIOGd2AkSmvuK2RM3DIPmOYGZsLixOfVmXEaMBcvlExk5wFWfd/6F0eOwv+
5nGxSrerwLD9juIXMgcGownqEdOLIIswG+sN/waJHR7Fe9NOg+fTZ68W+c9D
m52hsn4oFNacWtv580oSItnSwz+FemLV4Kx1toiE8sNC1ay+kzgwpjja6Uct
pMwp6367PgnzujsLjIu0EKt9LjRA5wqODHrzyGEpGSFVRXnQhkyscvQY0com
o0nR9MUNLdl4F8lj/KOxNlrBHT7+riwP23dZTdlkaKOcFxGGiw/wsTo3pSf9
ewri7M/60woEOFTiLk/jURBXvnrtUEYRPtn7idevR0Us0uM2TWAJpn828whI
p6L8PpcEspcIPzIz119H6KCw8WRq86rbeEqQ1JB7TgdRAq8mHBwrxSNEvOcq
EoHeBERq/ukvw5cu7xrQiydQcJaBr4lMjJv4WXJaAoEi7HtdN9aKMan8dZrz
WQLF9Ip37GkU4/iXCVs5SQRKtNlvEf9cjI9ZVV8aukIg4YPUwZ5xMfasX2nT
mk+gLhURd9NOgpeNUaNS6gnE8CLz7Gok2Ff7kHORgkCHv3Rc2N8gwbmmxaYN
9xd6hUVxzBYJXuTgiCebCcT6iPzyXkqwVuopw7A2AuUkn1+hUUvwoLVS5txH
oHbZrLRxmxRb22/lHnmz0PN9Iux2lOLgfRcCOG8X/r7xeZO/SPGrGAuKbJBA
Y/t2nKIxpPhJA8Pb8jOBDN/FO6SypVi3Q2TjoCKQ8RXXTSXnpXj3wMSc7wSB
lm8ys6znSrFCL/NW5jSBNiTIKaN5UqxZ3scRfyXQFsvLUzpCKd6+eb17q4ZA
Dg8ZHyxKpZjlwrEemCOQy/HVXdsrpLiS0To9P08gutH0Y0+5FP8HWFtW0w==

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {-0.059999996326530615`, 0.1199999963265306}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682154806987875*^9, 3.682154820175396*^9}, {
   3.6821548634879336`*^9, 3.682154888878602*^9}, 3.682154972753686*^9, 
   3.6821550639100285`*^9, {3.682155160097644*^9, 3.6821551739882975`*^9}, 
   3.6821552934844303`*^9, 3.6821564421058903`*^9, 3.6821565073246574`*^9, {
   3.6821601480666485`*^9, 3.6821601654104576`*^9}, 3.6821602580511475`*^9, 
   3.6821604510045304`*^9, 3.6821611981616206`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "2.`", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.682154806987875*^9, 3.682154820175396*^9}, {
   3.6821548634879336`*^9, 3.682154888878602*^9}, 3.682154972753686*^9, 
   3.6821550639100285`*^9, {3.682155160097644*^9, 3.6821551739882975`*^9}, 
   3.6821552934844303`*^9, 3.6821564421058903`*^9, 3.6821565073246574`*^9, {
   3.6821601480666485`*^9, 3.6821601654104576`*^9}, 3.6821602580511475`*^9, 
   3.6821604510045304`*^9, 3.6821611981772423`*^9}],

Cell[BoxData[
 RowBox[{"-", "0.06`"}]], "Output",
 CellChangeTimes->{{3.682154806987875*^9, 3.682154820175396*^9}, {
   3.6821548634879336`*^9, 3.682154888878602*^9}, 3.682154972753686*^9, 
   3.6821550639100285`*^9, {3.682155160097644*^9, 3.6821551739882975`*^9}, 
   3.6821552934844303`*^9, 3.6821564421058903`*^9, 3.6821565073246574`*^9, {
   3.6821601480666485`*^9, 3.6821601654104576`*^9}, 3.6821602580511475`*^9, 
   3.6821604510045304`*^9, 3.6821611981772423`*^9}],

Cell[BoxData["\<\"stable\"\>"], "Output",
 CellChangeTimes->{{3.682154806987875*^9, 3.682154820175396*^9}, {
   3.6821548634879336`*^9, 3.682154888878602*^9}, 3.682154972753686*^9, 
   3.6821550639100285`*^9, {3.682155160097644*^9, 3.6821551739882975`*^9}, 
   3.6821552934844303`*^9, 3.6821564421058903`*^9, 3.6821565073246574`*^9, {
   3.6821601480666485`*^9, 3.6821601654104576`*^9}, 3.6821602580511475`*^9, 
   3.6821604510045304`*^9, 3.6821611981772423`*^9}]
}, Open  ]],

Cell[TextData[{
 "The last command line returns \[OpenCurlyQuote]stable\[CloseCurlyQuote] if \
the stability criterion is negative and \[OpenCurlyQuote]not stable\
\[CloseCurlyQuote] otherwise. A qualitative analysis is often performed \
instead of a quantitative analysis, for example because the ODE is not \
analytically solvable. If, as in our case, the ODE is solvable, we can \
specify the ODE directly with ",
 StyleBox["f",
  FontSlant->"Italic"],
 ", i.e. without having to retype a command:"
}], "Text",
 CellChangeTimes->{
  3.681191918586892*^9, {3.682155197738327*^9, 3.6821552656719203`*^9}, {
   3.682160599786008*^9, 3.6821606185984836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"m", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"(", 
    RowBox[{"f", "/.", 
     RowBox[{"m", "\[Rule]", 
      RowBox[{"m", "[", "t", "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6821607762393303`*^9, 3.6821607820205836`*^9}, 
   3.6821608261299934`*^9, {3.682160897505068*^9, 3.6821609208331957`*^9}, {
   3.682161035895824*^9, 3.682161038895853*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["m", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{"alpha", "-", 
    RowBox[{"beta", " ", 
     RowBox[{"m", "[", "t", "]"}]}]}], "B"]}]], "Output",
 CellChangeTimes->{{3.6821607592236304`*^9, 3.682160782676772*^9}, 
   3.6821608282705755`*^9, 3.6821609227862654`*^9, 3.682161040286398*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", 
      RowBox[{
       RowBox[{"m", "[", "0", "]"}], "==", "m0"}]}], "}"}], ",", 
    RowBox[{"m", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol1", "=", 
  RowBox[{"sol", "/.", "param"}]}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{"sol1", ",", 
   RowBox[{"t", "->", "Infinity"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sol1", "/.", 
      RowBox[{"m0", "\[Rule]", "0"}]}], ",", 
     RowBox[{"sol1", "/.", 
      RowBox[{"m0", "\[Rule]", "eq1"}]}], ",", 
     RowBox[{"sol1", "/.", 
      RowBox[{"m0", "\[Rule]", "3"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Green"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6811919604166207`*^9, 3.6811919844800816`*^9}, {
  3.682155305484475*^9, 3.6821553544532795`*^9}, {3.682156446887191*^9, 
  3.682156448121522*^9}, {3.6821606854579573`*^9, 3.6821607552705946`*^9}, {
  3.682160997677075*^9, 3.682161015223961*^9}, {3.6821610819896145`*^9, 
  3.682161091708433*^9}, {3.6821611286459274`*^9, 3.6821611489897413`*^9}, {
  3.6821612112710004`*^9, 3.6821612121148148`*^9}, {3.6821612519273396`*^9, 
  3.6821612568804893`*^9}, {3.6821612940836296`*^9, 3.682161335552453*^9}, {
  3.682162672457241*^9, 3.6821627696135902`*^9}, {3.682162876816848*^9, 
  3.6821628815981007`*^9}, {3.682162912285589*^9, 3.682163033692021*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"beta", " ", "t"}], "B"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "alpha"}], "+", 
     RowBox[{"alpha", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"beta", " ", "t"}], "B"]]}], "+", 
     RowBox[{"beta", " ", "m0"}]}], ")"}]}], "beta"]], "Output",
 CellChangeTimes->{
  3.682155357296974*^9, 3.682156448746483*^9, 3.682156513480977*^9, {
   3.682161020520789*^9, 3.682161044927077*^9}, {3.6821611450990567`*^9, 
   3.6821611521146784`*^9}, 3.682161216708482*^9, 3.6821612597710176`*^9, {
   3.6821629832543635`*^9, 3.682162986582492*^9}, 3.682163036316965*^9}],

Cell[BoxData[
 RowBox[{"3.3333333333333335`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "0.06`"}], " ", "t"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "0.6`"}], "+", 
    RowBox[{"0.6`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"0.06`", " ", "t"}]]}], "+", 
    RowBox[{"0.3`", " ", "m0"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.682155357296974*^9, 3.682156448746483*^9, 3.682156513480977*^9, {
   3.682161020520789*^9, 3.682161044927077*^9}, {3.6821611450990567`*^9, 
   3.6821611521146784`*^9}, 3.682161216708482*^9, 3.6821612597710176`*^9, {
   3.6821629832543635`*^9, 3.682162986582492*^9}, 3.6821630363326483`*^9}],

Cell[BoxData["2.`"], "Output",
 CellChangeTimes->{
  3.682155357296974*^9, 3.682156448746483*^9, 3.682156513480977*^9, {
   3.682161020520789*^9, 3.682161044927077*^9}, {3.6821611450990567`*^9, 
   3.6821611521146784`*^9}, 3.682161216708482*^9, 3.6821612597710176`*^9, {
   3.6821629832543635`*^9, 3.682162986582492*^9}, 3.6821630363326483`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVzn1MFHQYB/ADAgmCLSWGGJQnirXbsDjRRvY8COqFyJ3H248x6IJ4zzhe
9FSIkTnApOMkYSZ6iFDQwQlMYZKAcXYRi4LdeLEbQ2AdmMhxyJtw3P369cez
7z777rs9OxOzxMm2HA7nALv/c6FxtE7ZjOh2XvShUmUG3hvJITfDglBZZUr4
dNMMO2u2zVyKO4zXxffGF85sQvfieks6Cca+lsU6z/FNcGsNaMjMCMHZcG0s
55AFHmmccqWyI5jvEJj1SGEBT6V7alrOUez08zEbRyzAM5wtvXDhGH6zR3BY
4GEFw/JWXXmRAEMnP+p8VWiFVRJiqjn3MWrdHd0fFlpBs3cgUFcSiv/kVLZ/
12yF/b2XW9a+Po4idfqbGTorJGlrRVAZhhL7y8+bV63wzEv426XaE6iaX+jY
4k7BA/if9VWHY5+/es+8HwWbgSw/3yYhup2O6u8TUPhdkf36oUgRflswdv54
PIUuw5mV1CERtnXPyHlZFORSX9OumJOoLs03xxVRuPtkqfDv4ZOYPyZQlckp
dFzM9Hk7Xoz6q04rvjcouLjSeMm4GDMbEmITGygogiZsuLEROO2/N+7dNgom
VVpX3mQElr/31bL8Zwr1L12dexMi0SaokQo1FPYXSKTK2Ujs0S43dfdTWPrJ
ApZTUdi/Lbv7nSEKr3R11EXNRWF4jv6cbIT1dju8ITcaix87esn1bL+vmsd9
EY1vrcr4vRMU6hxSfyj+IgYjyiq2ZExTWNg6wS9YicHoor94RgOFcrtskplL
0N6r7JORpxRCbOdVN08T1HjrKqaYX3LSLYMygldOND2cZ5ZYJbf5BQTzOn0c
HP6l8P666LnlIsESj4qjAcyjxn1FiiqCc9eCr1Uye+tNDe2dBKsPOlcJn1HQ
Pf58Y/YBwbHdu2zjmEvGnoZ59hA8tvtAWgqzaXhysVBDkGMv4X7JrBkcChT8
QVBa4SJUMadoWwf14+zfgatldnMUPH/lcV2eEHROnPnelXlQ05gHUwRVS8m1
25kP/nJre72B4GioWenH7PRAkXTKSHAyYDgyjrmn87WOGhNBI3fOP4U5936p
o+4FwR1JApds5vH2InXAGsH++ak7xcyKe5s0bZ1gcKCP7ArzkbtnxdVmgvrp
+x/cYN5oW67/00LQa/r26o/Md1qla5QS3OAb1G3M/wGTTMs9
      "]]}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGDwAWIQrdT/d/E8uYN2jAxg4BD1KzLmRfp7ewYo/5Zqm8Wz
9P9wvgyrcs9fMw4HmPql1Yz/mGMFHGDykdMvXAsNE4HL826ev365vwScr6Rw
5haLqQxc/Ry3P0yGvAoO/yHAfm6I/WdlLSW4/Lykpsdi7ipw/e8YTVU+2KvB
5W0XPk85aaEB5zNJuDM8j9aC80/0LZvNUq8D59utM3mgPkMPzr+VljhpaYQB
3Hwb+wcxWsGGcPfMF49XX+9rBFe/J9pEPizWGK7+1nxO8b85JnD55J3K4YYZ
ZnD+3Ooch+xICzjfVzSp5WWJFdz8M6umnJtdYA3nezscl/DLsYGb3+oYMEGp
1hYuv9/pJvv3Xju4eUEzfgafm2kP53/6xnPhUpADnK8jmuoy18cRzlecL/ys
M9oJbt7ejz/XZ0Y4w/kvAmasznroDFcvssFseXaWC9w9OTsVeN99cIGrP3yI
q7ig3BWuPm+DQO6bL65w9VLzxNIzitzg6nWeVnQ0NbnD+U+/CF3qb/CA879F
uHyYX+kJ5x/SOGN9qd0Lbr7pwe7135u94Xyfw2INs3l8EOF/dGGA/VQfuP3L
Ciu6U6R94fKvZP2PdS5E8BvXOU5dIecH50vYm6Qcn+0Ht5/xTL6++mp/uPyJ
CYWCtiEBiPTwtOxr+oUAuPq+AvUPyuGBcHmFFb3b/01F8Dff/1x380og3H0m
m9Zf/CMRBJff1pKtohCL4Cd5mjoemIPg8/L9j024g+BPcLzHqBQZDOd/WJWx
p+QBgr/kBx/3wbgQRPjVJBTMe47gf1751/5vbiic/8foVuHKNaFw97Hs2bY4
9DWC/+f+iwQv/TCEfmZpOftiBF9EKnrphk0IvqnBbB2lTwj+Yrb0pW154XD+
e6F7JjVfEfx+5sKI7OIIOF/u1oflW3ci+Os2FHz//z/C4R80vAE/YoXb
      "]]}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVz30sHHYYB/DfeWlNexaMqLehNu2iabtcb/NS93W9Om/lqoefle3Crpij
Ordi4SLtRatN6yy6Zb1hPbaaMcZYxUvVdMqsuNhLb4Y1MbMW57zb1H7748mT
T755kufrmXw2Rm5GCAlg8/+uL5maN1n6IbzySqXbAAcnHJLVs0p/GErKltt1
HESg3ylKEQhhmLnKQ8nBXeGjnWvXglAzut9RKebAtLp7RB8D3OlqlIx6cODr
IBdVRAYjwXCsdoZw4Fll/2fJaSESnuitRI8JuhY3GtPpMXDLzeM3HhC80MS/
nfGOCKH112fvNhF812udk517HMlBh72HtQTOlY6pae+GwHaZH6y+QuA7nXf5
wgUxklYzF+byCaaX7fSlRaGYEzeVHVUQrFKRsSo/DFGbhf4SGUHvvqEA/aVw
iKtv2v0mJThy72rj2sUI1JdP58kjCFLu35IIbkSiNuj3PqmQ4G+36O9Lbp1A
uYXITuVP4CTgvd2vjQK3RdpmwSPgDJ096PNlNDp0ddyHBwgeaM7ZHpVKMO4R
7tmwj6Bz+vxK6ogEH0hCxnneBNezfYx7409izM2TM/siQcvkkurR2El4DWb+
lOhK0KbO8PZIisHAG11mq04EXJvtJNl4DF6Kq033cSTQBE9wvBJOwWrpSHqr
PYGxLq1TOXUKFS2TwkRbgpp1m1333pSiZ8GBKJ5n/Qpk2ZUzUpQ9NLuh4RIs
fbEl2MqMhU1HtWZlF4FFZ1t17JNYZKWUeOqsWW7u4i7IicPkQFde4nPs/pDW
18sUh3yzx83RVgTVO1I/K86Kx9NEF5V8J8GC3QSvYIX5rSGlegdBqfk5mpFD
0bPuWjtoSSAym6ureI8iOi9C28+8TtK3hnMpPvF10PQxy57JdLwCCt3oeVU3
86sbkqdbaoqJ/NNZzcw/zx8q0nxI0b9n4eObzO4G4+3WdgrD4UJnBbP+V8Xm
TAfFVX6uIJ350i9/RTp3UzTyTfIzzMaxqUVVL/vnWeq3Mube4ZGA0B8o5NpA
RSzzmftNw4Zxiu0hg6uA2bnP14s7SVGYWpwQyDzcW6sU/EHhePHzj/yYX+/5
dE/NNEXEgWAnHrN1hyYlc55CbBp8ZT9zd/vutiojRchrljkvM+fcuWylN1H4
zTR07mUeby1q4K9RlKrFUndmzTf/bqdtUBxc5OtcmI+35MVo/6EI6y9bdGLe
/Hq55sctivfF8UJH5q+aste2t1mf5uJye+b/AC7djRo=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.72},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {1.7291548114805027`, 2.22320102558641}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.682155357296974*^9, 3.682156448746483*^9, 3.682156513480977*^9, {
   3.682161020520789*^9, 3.682161044927077*^9}, {3.6821611450990567`*^9, 
   3.6821611521146784`*^9}, 3.682161216708482*^9, 3.6821612597710176`*^9, {
   3.6821629832543635`*^9, 3.682162986582492*^9}, 3.6821630364107428`*^9}]
}, Open  ]],

Cell[TextData[{
 "We see that, indeed, the solution curves converge to the stable equilbrium ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["m", "*"], "=", 
    RowBox[{
     FractionBox["\[Alpha]", "\[Beta]"], "=", 
     RowBox[{
      FractionBox["0.6", "0.3"], "=", "2"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6811920073246746`*^9, 3.681192086608987*^9}, {
  3.682155439797078*^9, 3.6821555192455034`*^9}, {3.6821630675670195`*^9, 
  3.6821631189839163`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 3-1: From the pen&paper practical.........", "Subsection",
 CellChangeTimes->{{3.682077322910199*^9, 3.682077338332075*^9}, 
   3.6821632303902698`*^9, 3.6821632842964993`*^9, {3.682163448406146*^9, 
   3.682163471843686*^9}}],

Cell[TextData[{
 "Solve the following differential equations from the pen & paper practical \
for initial values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "0"], "=", "1", " "}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "0"], "=", "0"}], TraditionalForm]]],
 ". If Mathematica does not match the solution in the Workbook: try to \
explain why not."
}], "Text",
 CellChangeTimes->{{3.682077620051136*^9, 3.6820777540981636`*^9}, {
  3.682163210812147*^9, 3.6821632204995537`*^9}, {3.6821633162341104`*^9, 
  3.6821633731716533`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "(a) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "z"}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     FractionBox[
      RowBox[{"3", 
       SuperscriptBox["t", "2"]}], "z"]}]}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.6820774135665197`*^9, 3.682077471441615*^9}, {
  3.682079720366001*^9, 3.682079720366001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "*", 
      RowBox[{"t", "^", "2"}]}], ")"}], "/", 
    RowBox[{"z", "[", "t", "]"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682077824301323*^9, 3.682077845238866*^9}, 
   3.6820778794889336`*^9, {3.6820779698639545`*^9, 3.682077985989065*^9}, {
   3.6820780220047154`*^9, 3.6820780324734926`*^9}, {3.6820780920985394`*^9, 
   3.6820781001298*^9}, {3.6820781429892406`*^9, 3.6820781483642473`*^9}, {
   3.682078210036194*^9, 3.6820782361143456`*^9}, {3.6820782784112673`*^9, 
   3.682078353051976*^9}, {3.682078394630101*^9, 3.6820784060051465`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["z", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["t", "2"]}], 
   RowBox[{"z", "[", "t", "]"}]]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DSolveValue", "::", "bvnul"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"For some branches of the general solution, the given \
boundary conditions lead to an empty solution. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/DSolveValue\\\", ButtonNote -> \
\\\"DSolveValue::bvnul\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.682078299301815*^9, 3.6820783558644156`*^9}, {
  3.6820783982707043`*^9, 3.682078409255102*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"1", "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["t", "3"]}]}]]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409255102*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DSolveValue", "::", "dsvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"There are multiple solution branches for the equations, \
but DSolveValue will return only one. Use DSolve to get all of the solution \
branches. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/DSolveValue\\\", ButtonNote -> \
\\\"DSolveValue::dsvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.682078299301815*^9, 3.6820783558644156`*^9}, {
  3.6820783982707043`*^9, 3.6820784093644733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SqrtBox["2"]}], " ", 
  SqrtBox[
   SuperscriptBox["t", "3"]]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.6820784093644733`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "(b) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "z"}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{"3", 
      SuperscriptBox["zt", "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.6820774135665197`*^9, 3.682077471441615*^9}, {
  3.6820784817396197`*^9, 3.682078516755258*^9}, {3.682079723865963*^9, 
  3.682079723865963*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"(", 
    RowBox[{"3", "*", 
     RowBox[{"z", "[", "t", "]"}], "*", 
     RowBox[{"t", "^", "2"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682077824301323*^9, 3.682077845238866*^9}, 
   3.6820778794889336`*^9, {3.6820779698639545`*^9, 3.682077985989065*^9}, {
   3.6820780220047154`*^9, 3.6820780324734926`*^9}, {3.6820780920985394`*^9, 
   3.6820781001298*^9}, {3.6820781429892406`*^9, 3.6820781483642473`*^9}, {
   3.682078210036194*^9, 3.6820782361143456`*^9}, {3.6820782784112673`*^9, 
   3.682078353051976*^9}, {3.682078394630101*^9, 3.6820784060051465`*^9}, {
   3.6820785252239847`*^9, 3.682078558552204*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["z", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"3", " ", 
   SuperscriptBox["t", "2"], " ", 
   RowBox[{"z", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  SuperscriptBox["t", "3"]]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.6820785653333626`*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(c) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "z"}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{"3", 
      SuperscriptBox["t", "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.6820774135665197`*^9, 3.682077471441615*^9}, {
  3.6820784817396197`*^9, 3.682078516755258*^9}, {3.682078597177249*^9, 
  3.682078623083528*^9}, {3.682079726334747*^9, 3.682079726334747*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"(", 
    RowBox[{"3", "*", 
     RowBox[{"t", "^", "2"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682077824301323*^9, 3.682077845238866*^9}, 
   3.6820778794889336`*^9, {3.6820779698639545`*^9, 3.682077985989065*^9}, {
   3.6820780220047154`*^9, 3.6820780324734926`*^9}, {3.6820780920985394`*^9, 
   3.6820781001298*^9}, {3.6820781429892406`*^9, 3.6820781483642473`*^9}, {
   3.682078210036194*^9, 3.6820782361143456`*^9}, {3.6820782784112673`*^9, 
   3.682078353051976*^9}, {3.682078394630101*^9, 3.6820784060051465`*^9}, {
   3.6820785252239847`*^9, 3.682078558552204*^9}, 3.6820786076616383`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["z", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"3", " ", 
   SuperscriptBox["t", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["t", "3"]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.6820786117397366`*^9}],

Cell[BoxData[
 SuperscriptBox["t", "3"]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.6820786117397366`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(d) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "z"}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{"3", 
      SuperscriptBox["z", "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.6820774135665197`*^9, 3.682077471441615*^9}, {
  3.6820784817396197`*^9, 3.682078516755258*^9}, {3.682078597177249*^9, 
  3.682078643286621*^9}, {3.6820788004587264`*^9, 3.682078800802433*^9}, {
  3.682079728725336*^9, 3.682079728725336*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"(", 
    RowBox[{"3", "*", 
     RowBox[{
      RowBox[{"z", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682077824301323*^9, 3.682077845238866*^9}, 
   3.6820778794889336`*^9, {3.6820779698639545`*^9, 3.682077985989065*^9}, {
   3.6820780220047154`*^9, 3.6820780324734926`*^9}, {3.6820780920985394`*^9, 
   3.6820781001298*^9}, {3.6820781429892406`*^9, 3.6820781483642473`*^9}, {
   3.682078210036194*^9, 3.6820782361143456`*^9}, {3.6820782784112673`*^9, 
   3.682078353051976*^9}, {3.682078394630101*^9, 3.6820784060051465`*^9}, {
   3.6820785252239847`*^9, 3.682078558552204*^9}, 3.6820786076616383`*^9, {
   3.682078649349081*^9, 3.6820786517554283`*^9}, {3.6820787524430475`*^9, 
   3.6820787695993013`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["z", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"z", "[", "t", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "-", 
   RowBox[{"3", " ", "t"}]}]]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787756148653`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DSolveValue", "::", "bvnul"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"For some branches of the general solution, the given \
boundary conditions lead to an empty solution. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/DSolveValue\\\", ButtonNote -> \
\\\"DSolveValue::bvnul\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6820786571459646`*^9, {3.682078756255452*^9, 3.6820787757086334`*^9}}],

Cell[BoxData[
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["z", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"z", "[", "t", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787757086334`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(e) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "z"}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{"2", 
      RowBox[{"z", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "t"}], "-", "2"}], ")"}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.6820774135665197`*^9, 3.682077471441615*^9}, {
  3.6820784817396197`*^9, 3.682078516755258*^9}, {3.682078597177249*^9, 
  3.682078643286621*^9}, {3.6820788004587264`*^9, 3.682078800802433*^9}, {
  3.6820788326618414`*^9, 3.6820788649275484`*^9}, {3.6820797306472664`*^9, 
  3.6820797306472664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"2", "*", 
    RowBox[{"z", "[", "t", "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "*", "t"}], "-", "2"}], ")"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682077824301323*^9, 3.682077845238866*^9}, 
   3.6820778794889336`*^9, {3.6820779698639545`*^9, 3.682077985989065*^9}, {
   3.6820780220047154`*^9, 3.6820780324734926`*^9}, {3.6820780920985394`*^9, 
   3.6820781001298*^9}, {3.6820781429892406`*^9, 3.6820781483642473`*^9}, {
   3.682078210036194*^9, 3.6820782361143456`*^9}, {3.6820782784112673`*^9, 
   3.682078353051976*^9}, {3.682078394630101*^9, 3.6820784060051465`*^9}, {
   3.6820785252239847`*^9, 3.682078558552204*^9}, 3.6820786076616383`*^9, {
   3.682078649349081*^9, 3.6820786517554283`*^9}, {3.6820787524430475`*^9, 
   3.6820787695993013`*^9}, {3.6820788697712417`*^9, 3.6820788855213213`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["z", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"3", " ", "t"}]}], ")"}], " ", 
   RowBox[{"z", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", "t"}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["t", "2"]}]}]]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971618586`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971618586`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(f) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "z"}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{"2", 
      RowBox[{"t", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "z"}], "-", "2"}], ")"}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.6820774135665197`*^9, 3.682077471441615*^9}, {
  3.6820784817396197`*^9, 3.682078516755258*^9}, {3.682078597177249*^9, 
  3.682078643286621*^9}, {3.6820788004587264`*^9, 3.682078800802433*^9}, {
  3.6820788326618414`*^9, 3.6820788649275484`*^9}, {3.6820789172400875`*^9, 
  3.6820789253494368`*^9}, {3.6820797341159706`*^9, 3.6820797341159706`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"2", "*", "t", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "*", 
       RowBox[{"z", "[", "t", "]"}]}], "-", "2"}], ")"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682077824301323*^9, 3.682077845238866*^9}, 
   3.6820778794889336`*^9, {3.6820779698639545`*^9, 3.682077985989065*^9}, {
   3.6820780220047154`*^9, 3.6820780324734926`*^9}, {3.6820780920985394`*^9, 
   3.6820781001298*^9}, {3.6820781429892406`*^9, 3.6820781483642473`*^9}, {
   3.682078210036194*^9, 3.6820782361143456`*^9}, {3.6820782784112673`*^9, 
   3.682078353051976*^9}, {3.682078394630101*^9, 3.6820784060051465`*^9}, {
   3.6820785252239847`*^9, 3.682078558552204*^9}, 3.6820786076616383`*^9, {
   3.682078649349081*^9, 3.6820786517554283`*^9}, {3.6820787524430475`*^9, 
   3.6820787695993013`*^9}, {3.6820788697712417`*^9, 
   3.6820788855213213`*^9}, {3.6820789315369873`*^9, 3.6820789391620064`*^9}, 
   3.6820790063808317`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["z", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"2", " ", "t", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"z", "[", "t", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.68207894356816*^9, 3.682079009005768*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", 
      SuperscriptBox["t", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.68207894356816*^9, 3.682079009005768*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["2", "3"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", 
      SuperscriptBox["t", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.68207894356816*^9, 3.6820790090214596`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(g) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[DifferentialD]", 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{"2", 
      RowBox[{"t", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "t"}], "-", "2"}], ")"}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.6820774135665197`*^9, 3.682077471441615*^9}, {
  3.6820784817396197`*^9, 3.682078516755258*^9}, {3.682078597177249*^9, 
  3.682078643286621*^9}, {3.6820788004587264`*^9, 3.682078800802433*^9}, {
  3.6820788326618414`*^9, 3.6820788649275484`*^9}, {3.6820789514432697`*^9, 
  3.682078957896405*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"2", "*", "t", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "*", "t"}], "-", "2"}], ")"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682077824301323*^9, 3.682077845238866*^9}, 
   3.6820778794889336`*^9, {3.6820779698639545`*^9, 3.682077985989065*^9}, {
   3.6820780220047154`*^9, 3.6820780324734926`*^9}, {3.6820780920985394`*^9, 
   3.6820781001298*^9}, {3.6820781429892406`*^9, 3.6820781483642473`*^9}, {
   3.682078210036194*^9, 3.6820782361143456`*^9}, {3.6820782784112673`*^9, 
   3.682078353051976*^9}, {3.682078394630101*^9, 3.6820784060051465`*^9}, {
   3.6820785252239847`*^9, 3.682078558552204*^9}, 3.6820786076616383`*^9, {
   3.682078649349081*^9, 3.6820786517554283`*^9}, {3.6820787524430475`*^9, 
   3.6820787695993013`*^9}, {3.6820788697712417`*^9, 3.6820788855213213`*^9}, 
   3.682078963052658*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["z", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"2", " ", "t", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"3", " ", "t"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.6820789668963532`*^9}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["t", "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["t", "3"]}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.682078966943286*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["t", "2"]}], "+", 
    SuperscriptBox["t", "3"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.6820789669589195`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "(h) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "z"}], 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"=", 
     RowBox[{"2", 
      RowBox[{"z", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "z"}], "-", "2"}], ")"}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.6820774135665197`*^9, 3.682077471441615*^9}, {
  3.6820784817396197`*^9, 3.682078516755258*^9}, {3.682078597177249*^9, 
  3.682078643286621*^9}, {3.6820788004587264`*^9, 3.682078800802433*^9}, {
  3.6820788326618414`*^9, 3.6820788649275484`*^9}, {3.6820789172400875`*^9, 
  3.6820789253494368`*^9}, {3.6820789866308093`*^9, 3.6820789915839233`*^9}, {
  3.682079738350371*^9, 3.682079738350371*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"2", "*", 
    RowBox[{"z", "[", "t", "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "*", 
       RowBox[{"z", "[", "t", "]"}]}], "-", "2"}], ")"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ode", ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682077824301323*^9, 3.682077845238866*^9}, 
   3.6820778794889336`*^9, {3.6820779698639545`*^9, 3.682077985989065*^9}, {
   3.6820780220047154`*^9, 3.6820780324734926`*^9}, {3.6820780920985394`*^9, 
   3.6820781001298*^9}, {3.6820781429892406`*^9, 3.6820781483642473`*^9}, {
   3.682078210036194*^9, 3.6820782361143456`*^9}, {3.6820782784112673`*^9, 
   3.682078353051976*^9}, {3.682078394630101*^9, 3.6820784060051465`*^9}, {
   3.6820785252239847`*^9, 3.682078558552204*^9}, 3.6820786076616383`*^9, {
   3.682078649349081*^9, 3.6820786517554283`*^9}, {3.6820787524430475`*^9, 
   3.6820787695993013`*^9}, {3.6820788697712417`*^9, 
   3.6820788855213213`*^9}, {3.6820789315369873`*^9, 
   3.6820789391620064`*^9}, {3.682079015818342*^9, 3.68207901836522*^9}, {
   3.682079117849706*^9, 3.682079144802861*^9}, {3.682079329865568*^9, 
   3.6820793304749255`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["z", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"2", " ", 
   RowBox[{"z", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"z", "[", "t", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.68207894356816*^9, 3.682079023615164*^9, {
   3.6820791189277706`*^9, 3.682079147474638*^9}, 3.6820793322873526`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6820790236776667`*^9, {3.6820791189746313`*^9, 3.682079147521514*^9}, 
   3.682079332334263*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["2", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"4", " ", "t"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.68207894356816*^9, 3.682079023615164*^9, {
   3.6820791189277706`*^9, 3.682079147474638*^9}, 3.682079332334263*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DSolveValue", "::", "bvnul"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"For some branches of the general solution, the given \
boundary conditions lead to an empty solution. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/DSolveValue\\\", ButtonNote -> \
\\\"DSolveValue::bvnul\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6820790236776667`*^9, {3.6820791189746313`*^9, 3.682079147521514*^9}, 
   3.682079332443638*^9}],

Cell[BoxData[
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["z", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"2", " ", 
       RowBox[{"z", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"z", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]], "Output",
 CellChangeTimes->{
  3.6820779929577227`*^9, 3.6820780357702703`*^9, 3.6820781032703457`*^9, 
   3.6820781489735603`*^9, {3.682078213583007*^9, 3.6820782570517673`*^9}, {
   3.6820782992549396`*^9, 3.6820783558331614`*^9}, {3.6820783981769657`*^9, 
   3.682078409161357*^9}, 3.682078565317779*^9, 3.68207861172408*^9, 
   3.682078657020996*^9, {3.682078756208617*^9, 3.6820787755992613`*^9}, 
   3.6820788971462636`*^9, 3.68207894356816*^9, 3.682079023615164*^9, {
   3.6820791189277706`*^9, 3.682079147474638*^9}, 3.682079332443638*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 3-2: Seasonal effects on reproduction", "Subsection",
 CellChangeTimes->{{3.6820794372875633`*^9, 3.6820794437094455`*^9}, 
   3.682163233327794*^9, 3.6821632865309725`*^9, {3.6821634765936913`*^9, 
   3.6821634831873474`*^9}}],

Cell[TextData[{
 "Many populations grow during the summer months and decline during the \
winter. In other words, the per capita growth rate is oscillating around \
zero. The function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "N"], 
     FractionBox[
      RowBox[{"\[DifferentialD]", "N"}], 
      RowBox[{"\[DifferentialD]", "t"}]]}], "=", 
    RowBox[{
     RowBox[{"g", "(", 
      RowBox[{"N", ",", "t"}], ")"}], "=", 
     RowBox[{"r", "\[CenterDot]", 
      RowBox[{"cos", "(", 
       RowBox[{"2", "\[Pi]t"}], ")"}]}]}]}], TraditionalForm]]],
 " can be used to model such a situation. The corresponding differential \
equation (ODE) is non-autonomous and given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "N"}], 
     RowBox[{"\[DifferentialD]", "t"}]], "=", 
    RowBox[{
     RowBox[{"N", "\[CenterDot]", 
      RowBox[{"g", "(", 
       RowBox[{"N", ",", "t"}], ")"}]}], "=", 
     RowBox[{"r", "\[CenterDot]", "N", "\[CenterDot]", 
      RowBox[{"cos", "(", 
       RowBox[{"2", "\[Pi]t"}], ")"}]}]}]}], TraditionalForm]]],
 ".\n(a) Solve this ODE with Mathematica for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"N", "(", "0", ")"}], "=", 
    SubscriptBox["N", "0"]}], TraditionalForm]]],
 ".\n(b) Plot this ODE for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "2"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "0"], "=", "50"}], TraditionalForm]]],
 ", for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "t", "<", "3"}], TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.6820796195533924`*^9, 3.6820797092722425`*^9}, {
  3.682163507937411*^9, 3.6821637863237114`*^9}, {3.682163829823817*^9, 
  3.682163908055504*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input"],

Cell[TextData[{
 "Before we start, let us first plot the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", 
    RowBox[{"N", ",", "t"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for the special case ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    FormBox[
     RowBox[{"r", "=", "2"}],
     TraditionalForm]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.6821639832587132`*^9, 3.68216402006505*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"2", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "*", "Pi", "*", "t"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6821640956446004`*^9, 3.682164132910321*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
zKVW
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {-1.9999978964336111`, 1.9999999999998521`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.682164135019639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", "=", 
  RowBox[{"r", "*", 
   RowBox[{"n", "[", "t", "]"}], "*", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", "*", "Pi", "*", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eq", "=", 
  RowBox[{"Values", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"f", "\[Equal]", "0"}], ",", "n"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   "f"}]}], "\[IndentingNewLine]", 
 RowBox[{"solGen", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{"ode", ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"init", "=", 
  RowBox[{
   RowBox[{"n", "[", "0", "]"}], "==", "n0"}]}], "\[IndentingNewLine]", 
 RowBox[{"solSpec", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", "init"}], "}"}], ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6820795583813477`*^9, 3.6820795969283667`*^9}, {
   3.6820797672566853`*^9, 3.6820797676785583`*^9}, 3.6820798480223513`*^9, {
   3.6821639359305186`*^9, 3.6821639543211546`*^9}, {3.6821641812853603`*^9, 
   3.6821642075822797`*^9}, {3.6821651439114513`*^9, 
   3.6821653024116287`*^9}, {3.6821653547240868`*^9, 3.6821653557710705`*^9}}],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}], " ", 
  RowBox[{"n", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{
  3.682079775240965*^9, 3.682079851131713*^9, {3.6821653417240753`*^9, 
   3.6821653568803387`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.682079775240965*^9, 3.682079851131713*^9, {3.6821653417240753`*^9, 
   3.6821653568803387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["n", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"r", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}], " ", 
   RowBox[{"n", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.682079775240965*^9, 3.682079851131713*^9, {3.6821653417240753`*^9, 
   3.6821653568803387`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}], 
    RowBox[{"2", " ", "\[Pi]"}]]], " ", 
  RowBox[{"C", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{
  3.682079775240965*^9, 3.682079851131713*^9, {3.6821653417240753`*^9, 
   3.6821653568803387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "[", "0", "]"}], "\[Equal]", "n0"}]], "Output",
 CellChangeTimes->{
  3.682079775240965*^9, 3.682079851131713*^9, {3.6821653417240753`*^9, 
   3.682165356895963*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}], 
    RowBox[{"2", " ", "\[Pi]"}]]], " ", "n0"}]], "Output",
 CellChangeTimes->{
  3.682079775240965*^9, 3.682079851131713*^9, {3.6821653417240753`*^9, 
   3.682165356895963*^9}}]
}, Open  ]],

Cell[TextData[{
 "Here we are interested in the special case ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "0"], "=", "50"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.6821653810366745`*^9, 3.682165460017621*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol50", "=", 
  RowBox[{"solSpec", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "\[Rule]", "2"}], ",", 
     RowBox[{"n0", "\[Rule]", "50"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6821654630800643`*^9, 3.6821654971426554`*^9}}],

Cell[BoxData[
 RowBox[{"50", " ", 
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}], "\[Pi]"]]}]], "Output",
 CellChangeTimes->{3.682165498564497*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"sol50", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "75"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6821655122519937`*^9, 3.682165576720857*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVmnk4VF8Yx80wYy/7FiqhZElaiHJed8a+zVDKEiVJEiqVkCRJKtlKUqRF
qVSilET2fU/Ivi9R9n35nd9f83yec+6557zv933vfO9zNzp6WBwns7Cw3GNl
Yfn/d87Y/THDw1N7Y6vtDhYWQ7CmBgpWy5shNWn6n1JuQ3gSjqzuyNuj78Oq
YrGihpB/IP6im7w7uqkrcE5/myEc+GLKYSfvj+66eoR32RtC/MkXNZbyYajd
4OjwdLYhEERturl8PNqvL3x96KoRRKsMJJnKv0PjnML7vvGYQBlbSwZ38juk
tum0nbCECbC0VJWUKr5HYQGFdqc3m8Bnmu30U7EP6KWTmYUIYQIyY4ToeulU
pP9+iKZ/0QQWDARsRRXSUNYZB8ZKpwm8XvjQzY4y0F1W4eGrH0yhsG/rH+eA
DPTeZKkXvptCZ83zycLcDFRh08UxV2oKIi8fsAXRv6CPw668Zj2mEGgZIM9i
9BWdXhtQFyVsBjZvzV3n9n9D5bYup+28zYDL/u/4oGsOMpOcG4nYZQ4XGmrn
J17mIF0hM6QB5tBj8om03JuDwii+N+qMzKFdKjskZNsPtD9M1aHbwRw+81x/
8Cj5B3ryunDO9aY5OA8LfCl4nIu0Zo39V5rNQTKJLcswKxexnr2lV9djDnVH
Z3KqfueiGyGJL2JGzUG7ubm4STQPzUSKGPmyMECk5EnjSEQeqlv2ux8gyICi
FyqzQsH5SK6poExIgwF+Rzcsxj7PR7sRd2vgXgaoSQmsSufnI/8/+Q8GgQHx
0dNUBZYCJHPYtfqhIQMuXMsS2edTgJY4Rywe2DBA/qjR7uPuhcj/JBIY8mFA
q+RezeHbhSifqTNd6s+AyCZlbY83hYhlcMEnMZABK+b8epcGC5FTiKnqzlAG
/NJuOnDHsQht2ex6r/8BA25IOp//ZFWMSm1nTc+mM2DL+9TdiV7FyPPVIDUp
gwFlOsuztyOLUXUUT0d1JgPWnIj2caoqRtGqRzMpuQy4n5p3RVCvBKXWaeTP
VTBAg75GZ/VYCbrcViLRWs2A37+syX+uliBddynVT3UMkF4aC8r7XoKs9NY5
GzQxIElvfeiZXaVooYBUNN7NAINmV+PDlqXorIpB7dU+Bgyf+sxjeKYUoUAm
wT7IAJUI07sbUkqRs/NjpYkRBnxu8Y2uli1DedVPufVnGHDIvfjAN6IMjTV5
Kl+dY8ACi6DoyyNlKP6k0IkPCwzQln8d6/+oDJ3sZFsZXWFAoWdTvLJQOeI8
IlXaS2WCM6vsEXG1cnTqB0tGEQcTOO57bKQwytGjpQuXHnMxweQb9XnrrXKk
np13WGENE/6aWhwvSS5H60xbPdvXMiG887F8enE5atbm1wrhZ8JPyq7kW6wV
yJ9k1PxViAkXHgS4XtxYgQZ5VxN0RJggpliheAxVoAuH1VizRZlgxzj2TtO3
AmUIeAVHSzCh92FE2tBEBbJL1G3PWM+EYOU2rwa+StRoE9rXs4EJW35s2Z2r
UonO2TfYsckwwa0v58sD10p04G9JiIwsE9Z4c/sEhVSiXzNhOzfIMeED10Et
z6RK1BdyX1tAnglT2/5+1++uRBtbvxyu38yE+3l7ruxgqUJvbL1OPd3CBI0D
12G9dBUKl0wrOa7AhN8DNSTuvVXI/jw6K7WVCX4+kvkz1lWo4pPQ8VLM0rwu
Qd0Xq9CqtkP8SUUm/EhI0626V4W2PvRbt4LZUW2VmplWhXLuLDYHKzGBtdCo
5EVtFaJuf9TIqozjwdDMk5ioQoViKRv8MSu1KGTdFahGBeNu4cOYdZzFP7Pt
qEZ2lDxZQxUmWI1zfLhkWY2eosaWWMyufnPJf89Vo2yQTG/FfIV98Nmx6GqU
cUr3Lf82JkRHNj5uSsfjE8b5GphfSRXHmDZUo7bO03NMzFmvPkfkTVejrRtV
jA9jHhSvL1zHXYNOXNv/zQbz2Y4ywmpdDeLPHjUwwrz8PC8nXLEGjZ02nlLE
HOKaubdcqwZxCrJlr+L7C6h+/EoxqUEi3JNJhZgfTSfvBrsadPSmxofLmOW/
Jab5uNWg9bf3tGzG/CEgVvWTXw3Sqk5QKMDn1dSLSPl3uwbFZlk/tsBcwH1z
69bHNajG+qFGPY6feW3AS6eUGnRoR/OyLubf971lE77XoL26df9e43g72Xkm
NlfWoF1d1/nJmL0HHOLM/tagzStnx4NxPskpB8VurtQgvXxSRjrO9+2z5vfy
19Si0APTmT+xHhKXte9qbKtFrhPxd/9g/Sjl7+Y5h2qRZXLxyW6sr88hKjdT
zGvRtJLmvfJNTCgTlL4m41mL9CQKpr02MmF/szDL4YBa5MXhvHsX1mt7PO/l
mPBa1Ovg3DEgzYRJheULPKn4fm6eQbKSTPD/NzWpl1uLbmQIh73D+uf4NOJ5
tbYWNYgy1imKM0ESWl1nxmvRm9c32xeFmZBE+TmgSq5DHHeUZRm4vlTLy51O
CdShQxbveWIEmKBr9c2+U60OnWM5NLiE69Xd7aFF2bk6FGx1qkiBnQlz2yOr
2YLqkK7aSSkhChMCZ2+aoOg6lPA59+g4mQkxgZf00tPr0C43u9Yg3C9+PDik
GT9dh8z/uZbzTTNAsFBE5uzFetQ78ae3qIMBH0cH7WOC65H2UQNe0TYGMES+
xWXdq0ec6zh97X4zIOyEgzB7ej06ffXI/uKfDODgesXxaKwerdwd0JMuZcCS
2Z5/hSd/Iqpi5ljLewY8vMit9Mf7Jyqct1sX/JYBe560ufCF/ESb7Uot5ZPx
82H8ardN0k9U6awkZ/iUAWNRZQ3/un8it6HuevFoBvQ22WaJ2zWgtaZD66bO
MyCQpDKvfaoBpYq86aCcZcDGrSy7nXwakLNrxaM17gyw933+/t2DBmSYgwiK
MwOapEaf0hoakGu323zIAQZUOvrfPG32C21pDnOdU8P9d+SJVS40oiXDdmZb
tTmE8RduU2Q2omthya2Khfh5unuI497RRtRsuUfHNdMcRAK2f3MJbETv+19b
ZDw3h/OCeev5ChpRVHj4txhvc9ip2TNor9+ERHb8UomTMofUG3K+S6bNKOpe
6onlw2bwVuZ1grptC9o1krK2NM8E1u/+G3XdsQMd3CZbJetnCIHJsbfunOlA
KeVXNu30NIReSd1r9wI6kNS9MQkDJ0N4xfro7Iv4DhTjaW/hb2IIqrWGzMLf
HaidbH5TXsoQNny2uBGo0Im4biin+OQYgCrzHT0vsRP1xnH1VHAYQBdXEOgl
d6K8Rv8Xj5b1IbLAem/Zh05Ef3I+/9yEPkypU3bW5XSitR+W7DRa9eGLtN2m
7rZOlKBI5ZL6oA8wwkkmS3Shqu2XGo5Z6wPzxvEcncguZGug7GPzUQ+kkROn
y8MuxLrRQcPupR6MzDhahj3tQj68pisuj/QgxPnIwO+PXUj7fGTfs2A9yNa1
XetV34X2fds7+cRWD5TYmA5JQt1oQ3RCfyG7HrBf3bvKFdONUgKDLq0/qQs/
NbQMtyd0Iy1dz0MJDrrwdGxP1MGX3Ujjus+KopUuaB9R3/w8A8+PPlJ+iqYL
XkjNfF9TN9I8Y3g3WFoXupc3J3iI9yDH0LDT2xvp8N1HEP2M60E+8bThWAs6
CDmtDno860Gn+FvvGBrTwc30TyT3mx4kNZOqQ6HTQXJDfj+R2YOuLrr8fbKL
Dn6FZ8NSm/C4/t6+k+J00OSrawsT7kX1d+wM9XpoEDn//cZWqV70dvM62a+t
NBjuTt5eJNuLoO+4lcYvGsR+unp9eUcvCn+eWGNbSoM5m+3Kbha9yOhLQoD6
BxpkvAj3M7zbi9JCxzLpATRYc9dPvu9+L6qCwdf+PjRw9napCYjvRQ+PHpIv
9KKBiDHIfknpRZdLD5VdPEmDC2P/yuUr8PXe99Z4WdJgp5b5OjbOPqSXoRZT
pkCD27JahQl8fajngaVjlSwNenk3e2iJ9aEyzhNt7etpENW5knd2cx/yvPFj
WE6EBhPX37l26fahfO49USasNEit4c3MDuxDy3vjryx3EFCwjSG4M7QPxdar
c3a3EPArLNItOaIPqdyrb6lrJGDJRHR99JM+xOL/+EhzNQEGpRuCTmb3oa/F
sVSfHwTYbjnW1l7Yh/hcHs/8yCLA/caL3fsr+xCNY1pd6CsBUbpbh7Rb+9B7
S/jYkUpAe+4OM6GFPqRgtfsx13MCxjdceHmT1I90zRa2pT8hgC3gC8sqRz/S
1nwj4fqYAAXtfWlDov3oCjNlYeE+AV6ZemI5u/qR3ey/2Q+hBHClWXefPNOP
Is7Furl7ESAl8Eirw7sfJW7pLGk7Q4Dqmfbo/QH96M6yarC1BwEHth3TR3f7
0dSLx3IXXAl48sbtrVBKP1r/7DaZfpSANK73lND0fvSvR+GsiAMBRSfH7Ve/
9aNI90rdaTsCRjZf4B8u60fntjtLNB0iQP35lQs5g/0ojWcsQI1JgBFrXvXO
sX707sOAmIs5AXaObAqvZ/sR720x0demBARuuNkSTR1Ayzk8+pZGBNy7Ur6T
a80Asry671KmAQGv2nnDrggPIHH3QAEVfQKqHkWCq+wAUn3A5atJJ6Br8Wds
h+IA8nVINqonCJiyEZ3cv2MApQcJBnrrECAu/ugFIgbQnpfDWwa1CVDybl9J
NxxAuzSePfi4jwDtxg2HtjIHENfJbM+bewlwuveCS/jIAKqoTbCx0yQgeoLv
o5LLADo+87Gf2ENAvrmfNd1zAH1eSV+joUHAxNsBFjvvASR1q7hOS50AGS7L
V+cCBlAZH9cOs90EWJzINr8VMoC6BmK3eewi4GqBwuzT8AFUcyiyJH4nAZ3+
LHp1TwbQPbkNNQo7COBrPTU69GoAaal2a19XIwDtaYwmpQ4g0Hc2+rcd6+k+
sVf86wCqXps9cQJz/GRKj2ruAJKzn1f/p0pAJUP8lkHpANqyT17iOuallCC1
I7UDSH2aEauAWYl7rPli8wDiFwj61LoN69XF9urdrgHE5lLiHo85tLBoy8uh
AaQhJlfojjlTRq0me3wAbY9O+GKKeejK44u/5geQ9xMtQy3MYm0c6/+SBtEl
q8UL6pgNNL2KKFyDKEyuQ4fAfDGm47SUwCBSre9LtsWcNGUkvEtiEB3z4Xl/
DfMv5ucsE5lBpBNqxszETH2/0clp6yDKy38Rvop5F88dbj+1QfRyN9dpS7x/
p5NzH6M0B9H9fWf7P2GOLjpm84YYRCcv1S3J43gUbKom5RsNomflUh+SME8G
aCb/thhEwgxdll04njLtLxgTNoPo+wGN0VrMFlr8c5zHBtE3q94Ll3H8Ax/4
JWw8NYju/tv5WB3nJ3V6QG/PuUHk0SB4hAXnr9PC8i/DdxC1lbvkNGLm+5B9
z+XaILKLFf/2HecbeLfuC7g1iBwWOS0/Yj14uN7rjYkaREdj1934hPVSJeu2
o/jZIDJzls4fwPpaudr4u/3NICqYKS4TwfpT7iACZ9IwO7O678f6vB0rXitX
MIg+tQcHLyICDNcUuwf1DqJfVlELc7oEeJ9SE3k0gs+/4X3zI1wfr0oef0+b
GkQlsUUW5oY4nte8eHrYhpCx7wB/pwmOz+zG1zpyQ2jjqZ1ZH/bjetl/h2mt
PIRehF8/VmpFwKaPc3Oeu4bQvk2Xno7heg50q9Z/ojuEbKob+lwP4/N1+fWt
HB9C/AtHL645QcCCR8PIrdNDSGqaeO5xEveLFeUpsfNDaMdCamDbKQLkJTvI
O4KGkBspzqLDkwCegzobTjwdQgZhjmq+vrif9MVunkoeQsc/3u/Q8SfgiteE
ytXUITQ5/UFT+Cqur4hn++J+DCHEcmauK5iA5gqKbXX7EFoXvnpVMIqASFt7
R7v+IdR43ikM4X5oMvz55NDoEBL410HzjiXgB7uLN+vyEPrtafpyLe6nSUTZ
PfV1w2jxpaTWrxQCzn4Jq0k4OIyCJ0N+55bj+tAfaFRyGEYam46KfsH9va8B
dXx1HkZV97b9y6wn4NDk2Gj9+WHEYaRwqh8/H5CKJTdH9DD6fUbg3M8RfL7n
onqeNcPouWxMLDc/DV7cffINDP+gaAGZod+ONPCTlOH3ZP5BzoJv5ptcaGCR
/Mw5wfoPOjR9/0GfOw1W8pL4V07+Qa5h6V5bfWlgNfP2xLfQP6iZ+4i+YzQN
OA5/Fdxd8Qfx1fZL3MDPW7etdacUzUfQpgv+hcHadCAyLHNtDo4g2f6nX830
6CBGbxAJdRhBoivSr2TN6FB4uCl30GMEOdw8abNwmA7SEe2iSeEjKGva1NrE
nw41s8P5G+pG0ODJXJ+gXDrsLGSVFDkwiqxu3/jBbaELhcUtG9YfHkV3kyNu
HrTVBauyNLktx0eRxbRz/nsnXbhUfWyb5vlRxEuXcrh+UReym/MJ+3uj6JPf
bkrBY13Q/3vtZFLDKEphKZsIGtEFG1G2jN1Wf9HDiW74FqkHV0+yWRw8+A/F
0zkng1f0QfHLKx3vuDGUlzgeUDVpBPq16+NCEsbQB8OgGUmSMRwbvj/14NkY
6vY+meK2xhjiJK+//PpmDAV3XqavVTAG7qtHeRe/jaHQ6dEaO3tj+GMo0Xy5
dQwdNijwmSkxhjcttzyvSY2jIvZpV/JjE1BcdU8ISxhHq9zNRT27zYAntfWV
9bNxdOh0RaEjYQZ/HY0+yr4cRxvjRMyaTc3gQ5FcYea7cbT1MvnoWycz2BnW
Otz/fRwFdPXa9keYwV4po92odRwlGQ+TQ4bNwFRLrvKf2ATa9uDC2gtR5qAy
GvkrU3ICJfUGLsU9Nge+BJbO6xsmEF/ylvfpL82hjtw6sW7LBHoeHFXz/Zs5
jnekmIH6BNqckT+3tccc7K1ZnJ4cmEDjoQlnXokywONiywIjcgI9sHDfOnQY
+4lXhxVP359AMRd+qR12ZIBZc4ftzYcTqKsqvqsI+wslrd6s3KcTaD2nbaeP
BwOGV0b81dImkO/rHcrHAhjgHLxCFvo5gbpJ4+2bnjDAKiNgh2rTBJJKvUQZ
esYA3UGyk0nrBFraJ/H46UsGyBqxFwb1TqCb9481TbxjQBcv343pqQm0JZYS
Q/nOALt7G7kbhSeRZcPeh32/GGBS9ExrUnwS7TxU1DnUzACtWTm3tdKTqDI6
JLKrlQES1lsr9eUnkX3M8+XX3QxolNxx98vuSaQUcNjl+SgDikw/5fzUnEQW
d3QvE2PYD/mrj41pT6LtW7fdrZ9gQHSnFlNBfxIFSdpcrJplgMVzuuDDg5NI
26SOVZ7EBKKhiPbZdhJZ1/Uk27AyYTvV0KvOYRLtHRsdvYr9KJ+LaQOXyyTa
xrdO7hUnE1YfVFM2u02ipy8usr7kZsLfUuZumuckSs8Gqwe8TKhUtIrx9Z5E
qd/s1Cz4mZBl11Qc4zeJQi/PvpIQZMLbOzZzaQGTiLH9rnsD9suh/+ytR0Im
UcRvuYKNYkwwSDux7nDsJPLY2/xJCPtz4fX3Njk/nkQU+vFIl/VM6A7NU/RI
nER/E8JZ3mM/7+cotfdq8iTqHZS7JIj9v2GVET00Be/XofvidlkmiGh6m0Sl
TqLaVz1jOnJMeM9fb/fi6yTSlduyT3Mzvv4yy/F33ydRoUkpVWYLvv+Q8umM
3En0KfSU+hJm4QO2538U4v22dpeVKOD7/wi5XFo6iVxDdLExwOspfb5eVzmJ
VmkjXHsU8XoPeu601E4io/1nP7RiNmTjv9/bgOP/7tPrs0p4P57a8aPNk2iz
cOPMAuaellNJM22TqExNM/K8MhM+6Me+W+2aROEfr/t0Y76cVvSZo38SyVg9
S9FRYYLR+qls/mGsF84fClGYRW9tLJb4O4kSJoxHf2HunTGr3jQxiZYDF2Z4
tuH1HP0alWYm0a+APN1dmC9XJXfsWphE+wXam8wxG2k2DmivTKKrBWXv7TCL
JLGN6ZOnEHe4YZkt5h5+tTkGdQrdb7HfYvr/epcdWGy4ptAdX4sy1f/XG7rN
cWzNFLr1/v0H6v/rHcjkcxOYQrukdFur/t9f7oDYeZEp9LVE1uzm//tTEt7o
LzGFvnA9Z9+NOfUBoXBDegr9umbL1YDP68/muT1cZgrl8m4+5IzZ2PPxnlj5
KVSeLDc5hOMl1lqm83TrFFp7+mubA+Y+/TnDNypTSMH1hkQJjvfHNDmLdLUp
dO7BxbcymI1vBTgWaU4husbb1nc4f2KzKa7V2ni/a9cEduL89jq2nG0iphBv
YkUoG2Z/zd3Xho2mkM5br8ZN8vj6pGO3Js2m0Kund2TXY/2ICURELVlMIZ7Z
owM8WF8fh/48W2M7hWxC3HtyNjLhygHxt6IOU2jHavfm61ifJrl66RuOTSHP
jtC5vVi//Q8SC9ROTaEbbhkHgySZkMZWXaHlMYW8bvpPCq5jQoDn0k/6uSm0
4rW86744E8QNDvZZ+U6hJqcTFWdF8PVpQaMOV6aQ1tGobZW4fj6u/zjtcm0K
Xbo7d/D/+jKZ5aH63ppCV44+F7+zFq+XlCefEDeF/K5GWDWwM0HgTX+7Y8IU
il+VjhrG9f38PVeM/LMpFPGiKnQK13/JFwv2d6+nUEvv64r+VQbwlXcPZH3F
69+ouqWL+8fTauqTgO9TaC7zWQRpmgE7f249RM+dQm4tFrEfcb851Ha2pLxk
ClU4tP+cxP0p4R85+XcjjreIo9BUDwNUp+SPxrdModeXbiPrLgbkzRmJO3ZM
oc4I6ey0dgb0k6JuDvVPoWexVl0GuB+qCG1ynZueQofahxenKhmQrUFTFBGa
RtfzYjvtPzGAse9ET7PoNNqTFZch/ZEB3Tq34h6vm0asv4We/cT9l2pczy23
aRrRvmWNyLzC/f/wsZEdatNIjSem2OghA9quXkthMqZRkPu10Xo/BiyV5W+7
c3saJa9cK9upxYBHZktrnoZPI57xzNteuxmwt27n38/R0+jKrHzX6+0MuNz8
4m3no2lUVB92f3EzA1YGbijsTJlGmxKORG0TYgALxWRTS+U08qoJZA43mAMb
+imisHYGGVmKZirKmQNvWu9yQcQMara3Kn8RbwqOFW9KX12fRWuO1Wvev2EE
LzYFqx6/OYuS5yJcTvkawaDPkZiNd2aRTMRcD+FhBKcVhI8/jJ5FdYKlO+at
jMA72J/l9rNZ9Oz+Ae1geSO4C0x1j9xZJOGQmrSnyBCy0mee71qeRZQPqPMr
hyGIPNYJyPOaQwePy7IqJejDiXOqa2q855Chf/Ma1yh9+GK4/lGb3xxqILLO
pd7QB5uZpYy5oDm0uvtLvJ2nPiSYf/mncm8OHb6gXyBP6MMW8jaHuE9zaJfR
zp64AT3QPCGp7TUzh1i2V7qGaurBrX3cFVcX5tDDI6NNYqp60Cq4YH13ZQ5l
ea92fpTTA/8fjedfU+dRCP/iHCe/HuSLR6V0iswjnkSvet1BXTCp4JQyVZ9H
VRK1f1Yf6ILD9tlFOW883p41VsuqCxeetO7564tZaGb62iIdbq/Nu/j5yjx6
KclupzNJhy+jtyf1bsyjCv/WE+3ddOB7LfPnxP159DwA6E/z6JAnY/Y7OX0e
pd6i9loF0UFe6MUX5fF5FPwmj+0xHx32XgudmZ6aR2O91obFnHSwmPDYmT03
j3wfqCctk+lwpUbzgxnLAlr0i/0aNk2Dpts1Lz3WLqB78Qe+EC00CKUs3U9V
XkDHQefo9CsajM5YnN/luoBK978SfWRKA4E+k99m7gvIJslQvEOfBrvr9ZDL
2QW0LKhfpErQIOC9JmeczwJS6NymzKKO57vIPGa5tYBCw7oumG/E85vHC8rf
LKBPSQ6Uj3ME2BT/Ueh7v4C8tIc6Oiexv/jUF7aStoAeGnfdlP5HQElE86Ht
WQvoz2UZy6I+PN8od+R+xQJaOW08VIz/7/t/CxdyHF1AxSoentEfCXiaHHrJ
d3wBUc0fLX54R0BxTFB79DRe7xb5dOtr7Ae9vF8VLy8gN5Y86pFneL7Skb3K
axZRJ01ETeIe9jsSNol6Aoso7vNB7ncRBPzh2E89IrKIfntfq2OEEbCzT78m
UnoROXT8Vs6/gec/3uY0p7KICmxylG2xXxq+pVDKv2MR0c7l3HL2JmCtzyYV
RXXMJy+2BZzH/sRKdO4wWkQn9vjad3vg+WtWb+WbLyJywY3+Q8cJWLM8N9Zq
uYh+Pdo80eJIwI4/EwdmDi6iieri6dNHCPAr7l+vcGQRKctX9Gfb4vUDqtLC
PBfRSJGWr5AlAQLJ58aivRbRncLhJ2JMAoTqxJTjvBdRXdnobkVzAsRkjyW9
DFhEu/ikPvkaEyBhytGTErSIXoY2Pv6K/ajkhZT16SGLiCedPEcxIGBDyeyD
H+GLiGPiOamMjv35+KOGouhFNBYVkapDI0BWghCofLCIqpR+1xfrELDF7fat
5id4P/nGnqvaBGy9t72k4/kiOub9c/gD9stK2b/Y+l8tIkaGd5Mn9tOqfBv9
Jz4sokNiX3glsd9W21OUOZe+iKJDEw6w78Hxdjw1u/JlERkbaPGTsD/ffYtv
J+X7IhIbewOc2L9rpH/y5M5dRCZsfL3rsb/XbLNJ4S/E55/D1YX9/14qy7Bo
6SJK0Ja54b0T++NDRsdkaxeRQeG+Ra4dBBBX/yVsbVhEegb9PSfVCKC/jm5V
bV5Ec5/W6jRuJ0Cvfo+4etsi0lhXLmCJ2WCp/cC+rkWkmbPZuk2VACO5oEha
Hz7/1h1CFzCbmClUGw4tohaVeZoUZrOLVdyM0UVEGb42WLeNAMaTcwZW44so
vLKFFIPZolTsut30IvJLZA8/iXn/xPdcx/lFVHyDJ8oIs9W6Yysuy4vo78oo
lybmQ3QOLQ/SEnrVkzL7//scm9MpF89TllDBGRNrOma7+xbpvpxLyJRess0B
s33O7NhV3iXUvF/aNwTzkcFHyiH8S0hgwVDrB2ZHfsI1THgJefbRPan/v7/R
HEiKFl9CmzewS9hidj52u+eh1BIyY7+hkY3Z5fb2DYkbl5CG/tfybTgerp9+
2b2UW0KkX+H17zG7tfvGpigsIYvRFXNtHE939o2/0pSXkDXrJLRg9lQtEsjc
voQm82ySgnH8z1qfMv+xawmtZZUJAJwfr0C+20V7lpDBd7UqDpy/C28+lVTs
W0LJrOfDOzB7/7Sh1OssoY/TVUUFON8+y6s6zbpL6E667JkvWA9+8i/8OwyX
kLfVobuZWC8B3v9m/zCXUINQo/ww1ldgYvTOiQNLqOZ1S4Io1l9Q2Z4zc9ZL
SGtO9bYl1meIZNAwm+MSIntszp5BBET8EGuTOovPr6QcOKyL4x+YXtp+fgk9
Y8bweujj+qAzPidcWkKlgVMKLLh+3hXfuLvx6hIyts0SMjAhoKxqRkcufAk1
Op96647rMyI8UqU/agltv+389eABvJ6FyrqXMUuoJ+HyAdODBPQ3HJ/akrCE
kpK79tjj+ia3/UxSereEbIU434g4EVAa7xk1mrqE5q77b3FyJiD8CE/Au09L
6DlrkFq2CwHSvTRr1e9LKG9d5nDMaQK0/nzk3lmxhPTPOHR2XcTxnQ/31Bpe
Qr5yry9W436m9U3p8NLoEvKYNw/pw/2OfLnE8Ps43r9ylBQH7ofhLCyb0DzW
m7t5/dk4AlLYPRoIjmWEgmYPtr/C+xU21TSSX0akdULCvEV4vHFQnnvrMvK7
YCn0pxTfLzZIsEJ5GZm/7QltqMTrS2WNmO5aRgzBtObqBrxfWcUEJn0ZPXS7
1G7dT8BBNU42a8dltGnI0C2PkwZK576KnnJeRsFhhEHFGhqQ008qXnZdRuxy
d9N7BWnwdleZReLZZTTUX7xLRxqP77mVOBS4jBxI/x692kGDd4gX+TxbRvll
NS0qR2kQFPDd4vbLZbTPtzNxwwkaWOeedo5/s4xYL4dVbzhNAzZa1Z28tGX0
qUP5gMklPK53t5WrYBm91Vl9ax6Jx035feJ6l5Ha8UhntmIa/L6TeydlcBnV
P11DbqmkwfuqM4k5I8sozlqrNOcnDWwYdSU9U8vIyiSkJK2bBh8so0SVKCtI
yjeaqrtKA1sb4U9ZciuoueYFlUOLDh9PiI+1Oa+gmPo7Dv1ZdDDR+ZH22nUF
bbnYatFXQIcBiRMXL7qvoLi23PF/FXSQrEpf4buwgv61CohuaaND8E4GL/36
CtKBTs1NK3SwId3Y+voZHl97yEGb0AVy3JTThc4VVK1wy7eyTheYVdXNa2xW
EU38aiqHoD6UdG88X3J4Fcl9o7ecldIHmD3HF3h0FWVUlD/s26wPqhvE9Kdd
VpHP9/b43r36wHf2SHrLxVV0m0uBR/+EPtQIj4e9ureKrsw88bn7XR8YhwXo
RO0qytXgbf/kYQBbLmxt1JRlgfIAlSZSvyGM9y9tinrBAoOXUq2ytpmCyGXF
tvMvWaA9Q29/jpYp7BW0uX8omQXuFl1T/65vCiEog0M6hQXs/q2TTHYwBekH
Z0ZfpbOAxcy7A/vumoKJYf/n7HwWeDkbL6A+agpJb6oNh7swN7GcPPnMDCp0
VsiVPSyQmTY4GPDODCYalbLe97HA+pa2hLCvZrCPLVTl/BALEN9H192uNoOf
dnRBlnEWeB+WrsS9aAakNV9bhVlIsNNTs3zO3BzsPJ966EiToOvvz+A7Y+bA
qWebZbKBBAVmO5THF8zh8zohzkMyJNAUnxtLJGO/Unz9qbs8CfS72jt/8zAg
X+pkQ5wKCf5lp+/p2cCAreXbtGa0SQAsdsGa+gxofDJ4g6RDAv6JBy6/jRkQ
dCHxJw+NBKONml6eDOwPNgq6b9IngU6Ofrq/NQPCvWeeMMxJ4PBaK2bjKQbM
yn2nvnEggYtzzGGP2wx4vnje8vNREgyVXbRxCcf+pFblSe4xEjyeq6FZRTPg
td+TPU0n8PlkdkbyPWKAff01N4onCc5Hnt60/JoB3Ml7v/KdJYHwtwchcdi/
fPGfpkh6kaBog5OxCvY3/FtPJKh5k+BQ8p8Xql8ZUBBgVOcQQAK9LSttSUUM
OGPFuv5UIAmY+VL2/aUMkFbKOnUhiATHtgp9Fcf+ybtRmXInhARrXadzbesZ
oKjCr5EZTgJaq5OfcQcDIlsaHwslksDRWHF75RT2e8u3iOWnJLji/w8ksP9L
XQ8Dfc9JsFJdOG87z4CaY69UM16RYH/OOvi+zADeEe986w8k+H6zfN0M9peS
a5RdiI8k+Gyq7TGA/aeSahePYjoJTO3ObKrkZIKRl6HVUgYJ3t7zu3Oelwkh
S+JD8Tkk8FobF7YH+9sH0lV3buSS4OhONd5KYSa8hEA1z3wSPLlm8WG/KBOK
goZ9dYpJ4NaGzY0EExqS4jdsLSXBjS/HdzzHfrq3xKJQoJwEyiWbtixhv83K
+21NbxUJ3i8UrAvBflxgm0daRQ0J8q/eXpuF/boMc9OhT3UkWD66d64H+3m4
dysx+BcJJHoPRq/Ffp+RgfQ8mnD+QV9bUI4JDs2Twwd/4/h8lS/jkmeCv5Td
ToV2EvDZrVxo2MyEMMTXzN9JgsYg6fBXW5jw+GjB5YUuEkRyXfH1UGDC22ve
Mj09pP991K6tW5mQ9UKpuLyPBBEdMd+aMJcXd55KH8D6v7mBy1eRCb+Hovke
D2F9+oRK8ysxYZjb8NP1P1iflrSZh5jnlZet3UdJILjvb5iYMhM4GKkrVv/w
flic+m/+/33T2ePP0DjOr2Dawl/Mm6PFDbZMkmAiZX2ZvgoTdn+uHOGbJsH0
z02W0Zj1mq5GzM+Q4I2LR/RPzAcWdu3unsP52DZ4m2MbE5wkh3+XLZDgQ3uy
1v/vg7y046+kLZFgVob6xBhz0BEL2UcrJOB5EfT1/++XogKppUEsZNi5pufG
/983PX2eefo0mQzGXMLc+zF/LHIXsGIjg5IBnaaNOXdQJkObSgZL7xpVScw1
XI22mznIkGVo/nMU76dT6RYLHxcZlp1uq6Rh/meGXsxxk+He8ZvghnnFc9Kw
i5cMwbWXucUxr4l6+bd0LRlE1jaGf8Xnl/pkG/WRnww9hzTqTP//3qtxrUac
IBnkP/jUNuB47p3Pb70mTIa9lW/DmZiN13lfdRMlw/E1ggK5OB+uDp1l+9aR
oRvFHvfF+RqUdm2RlCLDRLDbYCnOr3P75J9FaTI00otSeTA7HmbnzZQhgxnj
o6wH1kenZIRUrCwZJn/wN4Rh/di3Sqh4y5NhJSOi+SnWl62tivnurWQwsEv6
+3ITzr/EFwdhJTI4kcPYY2WYcOi3jueUMj5/m9Z1//+/d7I+EPFxOxmmzz3L
lcf6NjnoV6+yhwwHeFUqRsSZUCZC7eXVIsOvyICYq/+/b/11d2pkLxlEs3vH
uXA90Q88E34DZEiduem2KMiEfZZlBzcbkGFqhlt1P67PLIH9LlQjMoi3HVcI
42aCZl2bd58xGcosfw5k4XrezRyPfWZOhocp++vmcP2rmIu1rj9Ihn8Hzu/9
g/vD2zVPR1YOkaEgplirYhH34yrF5TYbfD3VX+cp7ifypkj6kT0ZTDatXlOe
ZsB6Y+cjYs5kOLK0PJT7B/d3/fRevvNk2Phab3D4FwPCqNrT/y6QQexMT/OG
nwzgKSqmVHuTQZtu5WVSywAO3Rb5O35kKPpUVRtUzgAWGvkkZxAZlry+XfLN
YcC4NmOUFEWGH+mNRrdeMGBmn1ME5z2sj30PORoTGbC013sXfwzOb6/eTdF4
BlC1nlzeEEeG526+4hfvM0BSfYwXPSNDk8Sbkx+DGaC3LVzFL40MCf6UaYXj
DHi4vsZjpp4MhtcE215IMCBBuldwpYEM0e15re+E8fNCai6D0kQGv29fxd7z
MeD9ug0swq1kMBqoe3SPivu7qGf4jl4yMJ12+C30mMPftXypnlNkCGz79Ts6
zBxoLIyJYSFWIO2VvjrXZAavjR3+VouwQn/+8/MLlWYgEOM+nC7GCqt+7ZIT
eWbQrXyn21+SFXynzkvmvzWDQNuyOgFZVhgNOs03dsUMfnymp2nuYAUZzjMW
MbL4eX16j1cokxVeWfTlyLuYgvpvmRmFMFYYN/M08+00hul711vv8LNBsHSH
kF6UAVhkTzVGCLLB4jUurZFgA/jQf6z+njAbSNxSz4v1MQA3daLssTgbmL+b
suF2NIDuppWMlI1sINIm5We83QBq1nlHVW5nA/me8r79tfrwNtHViNeCDcxy
PtEUxfSBq6xZl38/GzRPOG76w6MPLhMGOsJWmN+5Kn0i6cMm2mYNKRs2uO9+
hM3ljx487O2RU3Zkg2LlDwVGOXoQsvkwyfQsG6Rpi8YJntSDYynmX25HskGE
jEXghkJdkJXJ5HaPZoNK8q9Lf7/pQu99WQfz+2zQz+IwWfRRF5wC5ikCD9kg
6+hCVMwTXThu+cwyJpENvk7QHnzx04UT8zN/Ez+wgQ2/9CuSui6c0o2Xy6jC
14cEGA+l0UEpk+PSgxo28D6TTIi9pcOIyrmKS3VsUGD9+pvFczq4iRmc2/uL
DWTuvzcejqbD6T/jP3Lb2ODL4oObzy/QwSNC165ihA3uCTXbGO2lw7m2kcgu
Lgp8jmi/c7mGBpkRXZf+8FCgLzzhcXwp/r+u9+vI9BoKfM9vHqjMo0H4uxwV
TkEKtC9L7Tv4Cf9/vxJZprqOAiO6bg7CcTQY3qhBDlCkAHd9cStxkgZqv5SG
bipTYLVEx93wGA0uhW6sidpGgbePI8/bH6YBxyRX/MsdFPDmyhpPY9JArqBt
T7UWBWBZc4xHiwZHnK+dkTahgLGCgOklPhq8kvA+tMWMAs4yX6+4cNPgX5Ub
UmNQIGrOk+FMpYG/uhWv3n4KTL9err+zREAch0LyaTsKJMtPx9weIuDX66rO
LDcKuL+9fdsI+yFph/ziIncK/h+RcVY2j4Djgl/e1XhSwOxKGx9vNgFTvol+
vV4UCMjk9OH6TICAqZcYz2UKRFsZbvicRIDpP3GG7R0KOLVveVobSsDMP867
xF0KEDv+/K28QcCTsflKhQgcn+5AqcYgvN54s/FcNAUeXAuV4btCwKOpWP17
jyiwcIrRIulFgN70zWC/eArE62voBZwhYGz6UuGxJxSwv60QM+ZOAH3Wmqb2
nAJLcaMjsycJGJkXR9VvKJCScPVc4hEC7i9w+n9OocDLtEMSbvYEwOJ81uP3
FAgydHhNsyMgeqlZ0y2NAoINhjfEDxGwdzV2N+c3Ctj85tx3hIH94urN82NZ
FLCKG94Vafa/v/RJb8ymQJeFgUQt9su9JBu1pDwKbBA6lXQe++nbbBIqtDIK
9OhY1lnTCNhN4Tq9tYICW8x2Kk/qENBJWXjDX0UBsZs7zscCATvZfyt01lJg
XFStkkebgHb2MpfiegpsErnS1oz9fghH5st3DRRQT7/ekqZFQCvnQ7nLzRRI
aNRNDNtDQDBXqJNTC9Zn+b6TdzUIUOX2eWbcRgFeK7f1j9UJ+M3t2q3WQQE2
s5H8jN0EBPHYbJToosC9jl9W/7+fUOE1OkLqocCtaFqTIOYmXs2EwV4KqNob
GBzYSYDiWgmpjEEK7NzmOrWiRsDPtVx28cMU0HV7o3oCsz/fwsPrIxTw0Ki0
bd1OwBb+4Wa3vzjflPbz9pjr+H+L7R+jwGjTsP+oKgF+AmUHtSYoUGm5euEm
ZnnBzPsyUxQ49knOXg1zjeDrBs4ZCnzrdN45uI0AH6GHQuOzFEBHyuZfY5YV
DrVsmqfAvIvVOx/MVcI+kTmLFDBsW2txELO3iGtt0jIFWMwXegGzjKgNX9gq
BSZYxE78//6pQtTI/DyJCqMDJ5v+fz91QUwzzI6VClvf/NMwxrxBfGsljUKF
jc9fhrhgLhOX4FFkp0JDW1hxJOaejI7PHJxUYL/I9qME89KBF0f7uaiwsj5D
nhvvX2jKlaeAhwrq9k8WrTErR6pmJK6hwjmfL9r/f1+kpzpz9AofFYIvz/yT
xPGxr/rGc1iACklKjLURmC+6Xc3QFKKCIiXzET+ObziXvqOYCBUG1Dc/iMf8
6hUP74woFVqe3SRp7CAgV68uo16cCndqapvaMP/ujXFMXUeF4oG/UuE4fxOB
h3nvSlGh8V1VjRnOL/fGTV/c1lPB+srhcXGsB9mcQUejjVTwRsFXxjEfWDz3
hSJHhek0w95CrCf32D3HeuSpkJL0MTPvf72pr/LmbqFC6gRzpVyTgC/nQo/5
KVGhxDm7gnUfzh8/Y42NChV8s0wOqmE9D70X/qquSoW091FmpxEBEiNP1kzu
oEKWamYgB0HAjlDnrzW7qDDiapLjguvFZIuS0zt1KjADlk400Am47JTx9aQW
FbZlUJbr9XH9tFY6dRJUGM73VHXG9TjvE7U2m04Fkcm0EgVcrwLi1plxelQI
t/cpn2cSQDvQu/agERXUttxfm3OAgKTKhcxKJhWiE2JC2w8TkH3qx/E3ljif
81EeFNwvGjmD+W4eoIJ4bkOWhiMBHHr8znRrnL8vtWEFzgScyt7M/+0IFQJL
b1DPeOJ6shv99sAR5zslcdPiWdy/Fj46X3CiAtvyzIuI81ifu7WztrtQ4dLS
jaYeH1yf7/efeOVBhacXiwckg3F/TLj6/Z4/vn6Rd2dXPO5Xl2sX4wKocOZU
GZvPU9w/bDdqPg2kgnFQ6dGNuL9eEMn9/C6YCvFDb7LiUgiYvs3yoTiMCnE7
hpu0v+N+eunK0/l4nM+uY8/3deD+drC6c/UJFXL39KRm9+B+s2v9euozKsiO
NKubDRLgNZYdJ/CSCkJspUkPxgmYdF6JVnxPBQkjetdvNhpMWF6+cTgH55/3
iYygCg0it1cWHsulAmcRavPZgZ9na6XYXPPxfs+Ujo1p0OBsWVbAhWIqVO/4
LMZBp8E4LF26W00FlvdCm7ptaDCm7OuW20EFDU+tROIWDUbZLzHlWNjhrPb+
fY9n8Pj2ggEOMju8XG+RbLaM72+71n+ElR3WtHir8LDRYeb9i9dp7OwQvxJz
7g0/HVgO1bESa9nBa2DZw0eZDkKvFD/bS7MD9Y2ijNUJOmgatEs82MsOB45Z
anT00GHvWYVUX212+Bf2R4BrhA7okZe+A7BDiHb4AZiiA32My0uezg5LhaIz
VWy6YPpAvTLdmB0+HD1Vf05eF44Mhl+ptWEHbWGSaMMpXQgOofVyXWKH9b/3
snxZ0YX8uIgv8r7sMDQ4MW/LqYfP3XGbuMwO7r1XvvMI6cGlBt9dPlfZYZ3T
J8doBT1wk0kPHrrJDtUf2uw0D+gBM0tWoeQhOyyLzFHq3umB5BjF/XoWO7DT
7HneuOrDIdb9RGI2O7g4fKUUXtCHeyJPRb7/YAcNuQmroUB9WLNPO2eqgB2+
bHZNZMTpAyn0Ap9TJTtsUZTcGlOhD/2bBj4S7exwME0kZ1TVADap77ph38kO
zymZnon7DOCI0TVbn252aHn3o+WwkQE0e65n+9iPz9vm4zZ2zAAqvh88sPEf
O/wQVTC7FGMAHLUvFPaNs8O5OLenHs8NQLd3cvnQJDu8C0ksPJ1qANlc4Unh
s+yQo6y0ElBuAItS7T5v59khq9O94V6TAWhsVzIvWWQHo0a/1dQ+A/Ci+2zq
XWYHKY4ou4YJA0g9WDK7usoOhrLPK1ZXDeA/N6TlaQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 2.99999993877551}, {0, 75}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682165531345725*^9, 3.6821655790176926`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Not unexpectedly, the population density starts at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "0"], "=", "50"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and fluctuates between two extreme values. These values can easily be \
calculated: "
}], "Text",
 CellChangeTimes->{{3.682165596173978*^9, 3.6821656315631313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nMax", "=", 
  RowBox[{"sol50", "/.", 
   RowBox[{"t", "\[Rule]", "0.25"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"nMin", "=", 
  RowBox[{"sol50", "/.", 
   RowBox[{"t", "\[Rule]", "0.75"}]}]}]}], "Input",
 CellChangeTimes->{{3.6821656418912106`*^9, 3.6821656813444157`*^9}}],

Cell[BoxData["68.74011137196794`"], "Output",
 CellChangeTimes->{3.6821656896100082`*^9}],

Cell[BoxData["36.368867464760825`"], "Output",
 CellChangeTimes->{3.6821656896100082`*^9}]
}, Open  ]],

Cell["\<\
Alternatively, you could solve the ODE numerically and plot the result. This \
is only possible if all parameters and intial conditions are fully specified:\
\>", "Text",
 CellChangeTimes->{{3.682165728141364*^9, 3.6821658191258383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n0", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solNum", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", "init"}], "}"}], ",", 
    RowBox[{"n", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "3"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"solNum", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "75"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6821658220945816`*^9, 3.6821659083446903`*^9}, {
  3.682165982672896*^9, 3.6821659830635242`*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMaz4daacqAABJQDgxRMod
Cqk/3AMxQNKGS0BKtCx1tBe6P6aRUAW6PE5A+PE93Qtiwz+8kBQmzzJQQHQL
iVJrmMk/R7MTW0PrUED5Cj1FyyrQP0o73LctL1FANrWGTtBP0z9iAVKim+ZQ
QPVXIzk7uNY/aTHneiITUECIuxENvRDaP+ZVLQ0NyU1AGURRTq4v3T8zIpCN
c0RLQJbicbgCSeA/AWAbyv2OSECftWMAZt3hP1LB8zGmTkZAEmn+vNRp4z/7
kylt1YNEQMaYQmr2F+U/YdrqdAsgQ0D5Wi/OT6nmP5JWNYZiYkJAbZnFIlxc
6D+eZ1vb7jJCQEu4BOxzB+o/O+hEsrukQkCoaexrw5XrP2XHGuoVnUNARpd9
3MVF7T+9nSgYd0BFQGNXtwMA2e4/1VtPB+xGR0DgSc2N9kbwP/Of1dcx4UlA
Q1gT1HId8T+YvRwCzZxMQOavrfWK5fE/RDsDUCkFT0CpxZyPfL7yP5Of06ua
i1BArCTgBAqJ8z9qY4dILRhRQOTzdzSdT/Q/SjKxG/MkUUA8gWTcCSf1P6cp
8VedpFBA1FelXxLw9T+J7ZMUKHtPQIzsOlv0yfY/mq9Tci3sTEB58SQR3J/3
P1ect4x2MkpApj9jol9n+D/MFF3rQsZHQPNL9qu8P/k/+wBU+eCERUB/od2Q
tQn6P0IJGm0g5UNAQWcZMLTP+j+kxNr8d9BCQCPrqUeMpvs/NPjxJio9QkBE
uI46AG/8PwYWu66xREJAhkPIpU1I/T+K6XAU3+pCQAcYVuw2E/4/19isvpwY
REC9XDjtJdr+P6e60s5Iw0VAlF9vZu6x/z9x8xl8MBFIQNVVfV2pPQBAFgDD
cMqKSkDwWu1DyKoAQC+urVvcUE1AJpiHB+oVAUBABb2SfMVPQPz5y7jZeQFA
BCLTp/i7UEDiujomNuYBQLjV7lv8KlFAaKBTgWBLAkChHNZMPwpRQAi+lrmN
rgJAtps/W59vUEC4OgSuJxoDQPDTpFt8uk5ACNwbkI9+A0DWNUjEc0ZMQGjc
XS5k6wNA2grF/wWCSUDjFMqpO1YEQPyCs17gAEdA/nHgEuG5BEDoLegAhA1F
QCkuITjzJQVAYKfO8M95Q0DzDgxL04oFQL5y/hvojkJAzk4hGiD4BUD6daDr
pS9CQMPGYMZvYwZAxad9CCR0QkBYY0pgjccGQFp+l9RHRENA/V5ethc0B0BU
KEtzq79EQEJ/HPpvmQdASVksT5KnRkAI5Sz5//8HQC5dESMAAElAw5OzEw==

                    "]]}}}, {}}, {
                DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 33.}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                 PlotRange -> {{0., 3.}, {36.37225098929407, 
                  68.73716541773788}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "3.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMaz4daacqAABJQDgxRMod
Cqk/3AMxQNKGS0BKtCx1tBe6P6aRUAW6PE5A+PE93Qtiwz+8kBQmzzJQQHQL
iVJrmMk/R7MTW0PrUED5Cj1FyyrQP0o73LctL1FANrWGTtBP0z9iAVKim+ZQ
QPVXIzk7uNY/aTHneiITUECIuxENvRDaP+ZVLQ0NyU1AGURRTq4v3T8zIpCN
c0RLQJbicbgCSeA/AWAbyv2OSECftWMAZt3hP1LB8zGmTkZAEmn+vNRp4z/7
kylt1YNEQMaYQmr2F+U/YdrqdAsgQ0D5Wi/OT6nmP5JWNYZiYkJAbZnFIlxc
6D+eZ1vb7jJCQEu4BOxzB+o/O+hEsrukQkCoaexrw5XrP2XHGuoVnUNARpd9
3MVF7T+9nSgYd0BFQGNXtwMA2e4/1VtPB+xGR0DgSc2N9kbwP/Of1dcx4UlA
Q1gT1HId8T+YvRwCzZxMQOavrfWK5fE/RDsDUCkFT0CpxZyPfL7yP5Of06ua
i1BArCTgBAqJ8z9qY4dILRhRQOTzdzSdT/Q/SjKxG/MkUUA8gWTcCSf1P6cp
8VedpFBA1FelXxLw9T+J7ZMUKHtPQIzsOlv0yfY/mq9Tci3sTEB58SQR3J/3
P1ect4x2MkpApj9jol9n+D/MFF3rQsZHQPNL9qu8P/k/+wBU+eCERUB/od2Q
tQn6P0IJGm0g5UNAQWcZMLTP+j+kxNr8d9BCQCPrqUeMpvs/NPjxJio9QkBE
uI46AG/8PwYWu66xREJAhkPIpU1I/T+K6XAU3+pCQAcYVuw2E/4/19isvpwY
REC9XDjtJdr+P6e60s5Iw0VAlF9vZu6x/z9x8xl8MBFIQNVVfV2pPQBAFgDD
cMqKSkDwWu1DyKoAQC+urVvcUE1AJpiHB+oVAUBABb2SfMVPQPz5y7jZeQFA
BCLTp/i7UEDiujomNuYBQLjV7lv8KlFAaKBTgWBLAkChHNZMPwpRQAi+lrmN
rgJAtps/W59vUEC4OgSuJxoDQPDTpFt8uk5ACNwbkI9+A0DWNUjEc0ZMQGjc
XS5k6wNA2grF/wWCSUDjFMqpO1YEQPyCs17gAEdA/nHgEuG5BEDoLegAhA1F
QCkuITjzJQVAYKfO8M95Q0DzDgxL04oFQL5y/hvojkJAzk4hGiD4BUD6daDr
pS9CQMPGYMZvYwZAxad9CCR0QkBYY0pgjccGQFp+l9RHRENA/V5ethc0B0BU
KEtzq79EQEJ/HPpvmQdASVksT5KnRkAI5Sz5//8HQC5dESMAAElAw5OzEw==

                    "]]}}}, {}}, {
                DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 33.}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                 PlotRange -> {{0., 3.}, {36.37225098929407, 
                  68.73716541773788}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "3.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("InterpolatingFunction[{{0., 3.}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{{3.68216588236024*^9, 3.6821659097195888`*^9}, 
   3.6821659844852977`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
9btPmyes4JXL5+nlZW4oG/SQ+f//J/8Dd5iySg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 2.99999993877551}, {0, 75}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.68216588236024*^9, 3.6821659097195888`*^9}, 
   3.6821659845321913`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 3.3: Exponential and logistic growth", "Subsection",
 CellChangeTimes->{{3.6820794372875633`*^9, 3.6820794437094455`*^9}, {
  3.682163273437214*^9, 3.6821632891872206`*^9}, {3.6821667748612823`*^9, 
  3.6821667756581583`*^9}}],

Cell[TextData[{
 "The logistic growth equation is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "N"}], 
     RowBox[{"\[DifferentialD]", "t"}]], "=", 
    RowBox[{"r", "\[CenterDot]", "N", "\[CenterDot]", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["N", "K"]}], ")"}]}]}], TraditionalForm]]],
 ".  For small population densities ",
 StyleBox["N",
  FontSlant->"Italic"],
 ", the solution of the logistic growth equation is almost identical to the \
solution of the ODE for exponential growth ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "N"}], 
     RowBox[{"\[DifferentialD]", "t"}]], "=", 
    RowBox[{"r", "\[CenterDot]", "N"}]}], TraditionalForm]]],
 ".\n(a) Solve both ODEs with Mathematica in general, and specifically for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"N", "(", "0", ")"}], "=", 
    SubscriptBox["N", "0"]}], TraditionalForm]]],
 ".\n(b) Plot both ODEs in one graph for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "0.1"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", "=", "100"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "0"], "=", "0.1"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6820796195533924`*^9, 3.6820797092722425`*^9}, 
   3.6821757567988863`*^9, {3.682175786977723*^9, 3.6821759084486933`*^9}, {
   3.682175947343869*^9, 3.6821759508627834`*^9}, {3.6821759991493373`*^9, 
   3.6821760036174965`*^9}, {3.6821760852676945`*^9, 3.682176098640168*^9}, {
   3.6821762290021796`*^9, 3.6821762400740547`*^9}, {3.6821762738003173`*^9, 
   3.682176278770607*^9}, {3.6821763217989616`*^9, 3.6821763512416067`*^9}, {
   3.6821786298509455`*^9, 3.6821786304851093`*^9}, {3.6821787299819455`*^9, 
   3.682178759352573*^9}, {3.6821788287832165`*^9, 3.68217883607111*^9}, {
   3.6821788755203543`*^9, 3.6821788853509073`*^9}, {3.682178977081726*^9, 
   3.6821789918155527`*^9}, {3.682179173088622*^9, 3.682179213383086*^9}, {
   3.6821794456842155`*^9, 3.6821794789198465`*^9}, {3.682183196983864*^9, 
   3.682183198499256*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6821784438546386`*^9, 3.682178445306015*^9}}],

Cell["\<\
 First we define the two ODEs and calculate both the general and the specific \
solution:\
\>", "Text",
 CellChangeTimes->{3.6821767192083273`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"odeExp", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}], "==", 
   RowBox[{"r", "*", 
    RowBox[{"n", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"solGenExp", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{"odeExp", ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"n", "[", "0", "]"}], "\[Equal]", "n0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"solSpecExp", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"odeExp", ",", "init"}], "}"}], ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6820795583813477`*^9, 3.6820795969283667`*^9}, {
   3.6820797672566853`*^9, 3.6820797676785583`*^9}, 3.6820798480223513`*^9, {
   3.6821764131010623`*^9, 3.6821764890277786`*^9}, {3.6821765272637067`*^9, 
   3.682176621878275*^9}, 3.68217719269464*^9, 3.6821785456890817`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["n", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"r", " ", 
   RowBox[{"n", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.682079775240965*^9, 3.682079851131713*^9, 
  3.6821766234436803`*^9, 3.682177195286312*^9, 3.682177591653637*^9, 
  3.6821784516416607`*^9, 3.682178550415309*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"r", " ", "t"}]], " ", 
  RowBox[{"C", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.682079775240965*^9, 3.682079851131713*^9, 
  3.6821766234436803`*^9, 3.682177195286312*^9, 3.682177591653637*^9, 
  3.6821784516416607`*^9, 3.6821785504293127`*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"r", " ", "t"}]], " ", "n0"}]], "Output",
 CellChangeTimes->{3.682079775240965*^9, 3.682079851131713*^9, 
  3.6821766234436803`*^9, 3.682177195286312*^9, 3.682177591653637*^9, 
  3.6821784516416607`*^9, 3.682178550447317*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"odeLog", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}], "==", 
   RowBox[{"r", "*", 
    RowBox[{"n", "[", "t", "]"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"n", "[", "t", "]"}], "/", "k"}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"solGenLog", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{"odeLog", ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"n", "[", "0", "]"}], "\[Equal]", "n0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"solSpecLog", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"odeLog", ",", "init"}], "}"}], ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6821766448082294`*^9, 3.6821766916523933`*^9}, 
   3.6821771914653206`*^9, {3.682177641926692*^9, 3.6821776632592316`*^9}, {
   3.682177745075476*^9, 3.6821777703500404`*^9}, {3.682177809420185*^9, 
   3.682177870165362*^9}, {3.682177916324645*^9, 3.682177916689742*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["n", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"r", " ", 
   RowBox[{"n", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"n", "[", "t", "]"}], "k"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.682176694461121*^9, {3.6821771800643597`*^9, 3.682177200306616*^9}, 
   3.682177594838464*^9, {3.6821776511850953`*^9, 3.682177664205476*^9}, 
   3.682177771338295*^9, {3.6821778119103937`*^9, 3.682177871450695*^9}, 
   3.682177938927514*^9, 3.6821784540322814`*^9, 3.682178552295797*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"r", " ", "t"}], "+", 
     RowBox[{"k", " ", 
      RowBox[{"C", "[", "1", "]"}]}]}]], " ", "k"}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"r", " ", "t"}], "+", 
     RowBox[{"k", " ", 
      RowBox[{"C", "[", "1", "]"}]}]}]]}]]], "Output",
 CellChangeTimes->{
  3.682176694461121*^9, {3.6821771800643597`*^9, 3.682177200306616*^9}, 
   3.682177594838464*^9, {3.6821776511850953`*^9, 3.682177664205476*^9}, 
   3.682177771338295*^9, {3.6821778119103937`*^9, 3.682177871450695*^9}, 
   3.682177938927514*^9, 3.6821784540322814`*^9, 3.682178552311802*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.682176694596156*^9, {3.6821771801373787`*^9, 3.6821772003686323`*^9}, 
   3.682177594892478*^9, {3.6821776512561135`*^9, 3.682177664274495*^9}, 
   3.6821777714103136`*^9, {3.6821778119719887`*^9, 3.682177871511711*^9}, 
   3.6821779390045347`*^9, 3.6821784541143026`*^9, 3.682178552352812*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"r", " ", "t"}]], " ", "k", " ", "n0"}], 
  RowBox[{"k", "-", "n0", "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"r", " ", "t"}]], " ", "n0"}]}]]], "Output",
 CellChangeTimes->{
  3.682176694461121*^9, {3.6821771800643597`*^9, 3.682177200306616*^9}, 
   3.682177594838464*^9, {3.6821776511850953`*^9, 3.682177664205476*^9}, 
   3.682177771338295*^9, {3.6821778119103937`*^9, 3.682177871450695*^9}, 
   3.682177938927514*^9, 3.6821784540322814`*^9, 3.6821785523668156`*^9}]
}, Open  ]],

Cell[" To produce plots, we first have to specify all parameters:", "Text",
 CellChangeTimes->{{3.6821767378183775`*^9, 3.682176754146837*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"param", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", "0.1"}], ",", 
    RowBox[{"k", "->", "100"}], ",", 
    RowBox[{"n0", "->", "0.1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"solSpecExp", "=", 
  RowBox[{"solSpecExp", "/.", "param"}]}], "\[IndentingNewLine]", 
 RowBox[{"solSpecLog", "=", 
  RowBox[{"solSpecLog", "/.", "param"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotExp", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"solSpecExp", ",", "solSpecLog"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6821767593951993`*^9, 3.6821768734738226`*^9}, {
   3.682177032845133*^9, 3.6821771407651567`*^9}, {3.6821772497344522`*^9, 
   3.6821772585677457`*^9}, {3.6821772975278625`*^9, 3.682177482957412*^9}, {
   3.6821775376846237`*^9, 3.6821775490635777`*^9}, {3.6821780082385135`*^9, 
   3.6821781061299324`*^9}, {3.6821781748947887`*^9, 3.6821783139909062`*^9}, 
   3.6821784023168535`*^9, {3.6821784923842416`*^9, 3.6821784941466985`*^9}, 
   3.682178563781781*^9, {3.682178642403204*^9, 3.6821786430033603`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"k", "\[Rule]", "100"}], ",", 
   RowBox[{"n0", "\[Rule]", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.682178497657609*^9, {3.682178555934742*^9, 3.682178566915593*^9}, {
   3.6821786460731564`*^9, 3.68217864986314*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"0.1`", " ", "t"}]]}]], "Output",
 CellChangeTimes->{
  3.682178497657609*^9, {3.682178555934742*^9, 3.682178566915593*^9}, {
   3.6821786460731564`*^9, 3.6821786498771443`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"10.`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"0.1`", " ", "t"}]]}], 
  RowBox[{"99.9`", "\[VeryThinSpace]", "+", 
   RowBox[{"0.1`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"0.1`", " ", "t"}]]}]}]]], "Output",
 CellChangeTimes->{
  3.682178497657609*^9, {3.682178555934742*^9, 3.682178566915593*^9}, {
   3.6821786460731564`*^9, 3.6821786498891473`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
C2xfvxE0ubDAwuV551y2/wdY5+jL
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 199.99999591836735`}, {0, 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.682178497657609*^9, {3.682178555934742*^9, 3.682178566915593*^9}, {
   3.6821786460731564`*^9, 3.682178649927157*^9}}]
}, Open  ]],

Cell[TextData[{
 "(c) Analyze the logistic growth equation for equilibrium values by plotting \
graphs for a number of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "0"], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["N", "0"], "=", "0"}], ",", "0.2", ",", "0.4", ",", "0.6", 
    ",", "0.8", ",", "1"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6821795170652075`*^9, 3.6821795540818195`*^9}, {
  3.6821832350387444`*^9, 3.682183244057087*^9}}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.68217993557288*^9, 3.6821799367511854`*^9}}],

Cell[TextData[{
 "First,we plot the graph of ",
 StyleBox["f(N)",
  FontSlant->"Italic"],
 " to get an idea of, e.g., the zeroes of ",
 StyleBox["f(N)",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{3.6821832509398737`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "n_", "]"}], "=", 
  RowBox[{"r", "*", "n", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"n", "/", "k"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"param", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", "1"}], ",", 
    RowBox[{"k", "\[Rule]", "2"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "n", "]"}], "/.", "param"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.682179557708761*^9, 3.682179604871009*^9}, {
  3.6821796445803185`*^9, 3.6821796548389826`*^9}, {3.682179721199215*^9, 
  3.682179755737183*^9}, {3.682179788441674*^9, 3.6821798559422026`*^9}, {
  3.6821798890798063`*^9, 3.682179916590952*^9}, {3.6821799473849473`*^9, 
  3.682179958363798*^9}}],

Cell[BoxData[
 RowBox[{"n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox["n", "k"]}], ")"}], " ", "r"}]], "Output",
 CellChangeTimes->{{3.6821797365822077`*^9, 3.682179757767709*^9}, 
   3.6821797961586776`*^9, {3.682179858950983*^9, 3.6821799181463547`*^9}, {
   3.682179951039895*^9, 3.6821799601032486`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "1"}], ",", 
   RowBox[{"k", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6821797365822077`*^9, 3.682179757767709*^9}, 
   3.6821797961586776`*^9, {3.682179858950983*^9, 3.6821799181463547`*^9}, {
   3.682179951039895*^9, 3.682179960118253*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 4}, {-3.9999997551020443`, 0.4999999506536897}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6821797365822077`*^9, 3.682179757767709*^9}, 
   3.6821797961586776`*^9, {3.682179858950983*^9, 3.6821799181463547`*^9}, {
   3.682179951039895*^9, 3.682179960170266*^9}}]
}, Open  ]],

Cell[TextData[{
 "Next we solve the ODE ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "N"}], 
     RowBox[{"\[DifferentialD]", "t"}]], "=", 
    RowBox[{"f", "(", "N", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.6821800585798287`*^9, 3.682180097192855*^9}, {
  3.682180610197151*^9, 3.6821806108763275`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ode", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"f", "[", 
    RowBox[{"n", "[", "t", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"solGen", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{"ode", ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"n", "[", "0", "]"}], "\[Equal]", "n0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"solSpec", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ode", ",", "init"}], "}"}], ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"solSpec", "/.", "param"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"sol", "/.", 
    RowBox[{"n0", "\[Rule]", "0.1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.682180102831318*^9, 3.6821802368471174`*^9}, {
  3.6821803511079082`*^9, 3.682180423219634*^9}, {3.6821805398559237`*^9, 
  3.6821805513078938`*^9}, {3.6821808781897388`*^9, 3.682180933874199*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["n", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"r", " ", 
   RowBox[{"n", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"n", "[", "t", "]"}], "k"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.68218018429047*^9, 3.6821802417083793`*^9, {3.682180391410373*^9, 
   3.6821804255352345`*^9}, 3.682180553840551*^9, {3.6821808982089376`*^9, 
   3.68218093711504*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"r", " ", "t"}], "+", 
     RowBox[{"k", " ", 
      RowBox[{"C", "[", "1", "]"}]}]}]], " ", "k"}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"r", " ", "t"}], "+", 
     RowBox[{"k", " ", 
      RowBox[{"C", "[", "1", "]"}]}]}]]}]]], "Output",
 CellChangeTimes->{
  3.68218018429047*^9, 3.6821802417083793`*^9, {3.682180391410373*^9, 
   3.6821804255352345`*^9}, 3.682180553840551*^9, {3.6821808982089376`*^9, 
   3.682180937131045*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6821802417914014`*^9, {3.682180391489394*^9, 3.6821804255882483`*^9}, 
   3.6821805538995667`*^9, {3.682180898279956*^9, 3.682180937166054*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"r", " ", "t"}]], " ", "k", " ", "n0"}], 
  RowBox[{"k", "-", "n0", "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"r", " ", "t"}]], " ", "n0"}]}]]], "Output",
 CellChangeTimes->{
  3.68218018429047*^9, 3.6821802417083793`*^9, {3.682180391410373*^9, 
   3.6821804255352345`*^9}, 3.682180553840551*^9, {3.6821808982089376`*^9, 
   3.682180937182058*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
4mLmSNfZIeL/AX5IoJU=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0., 1.998276289187894}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.68218018429047*^9, 3.6821802417083793`*^9, {3.682180391410373*^9, 
   3.6821804255352345`*^9}, 3.682180553840551*^9, {3.6821808982089376`*^9, 
   3.6821809372190666`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Finally, we plot the solution for all values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["N", "0"], "=", "0"}], ",", "0.2", ",", "0.4", ",", "0.6", 
    ",", "0.8", ",", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in one graph:"
}], "Text",
 CellChangeTimes->{{3.6821806136160393`*^9, 3.6821806829300375`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sol", "/.", 
      RowBox[{"n0", "\[Rule]", "0"}]}], ",", 
     RowBox[{"sol", "/.", 
      RowBox[{"n0", "\[Rule]", "0.2"}]}], ",", 
     RowBox[{"sol", "/.", 
      RowBox[{"n0", "\[Rule]", "0.4"}]}], ",", 
     RowBox[{"sol", "/.", 
      RowBox[{"n0", "\[Rule]", "0.6"}]}], ",", 
     RowBox[{"sol", "/.", 
      RowBox[{"n0", "\[Rule]", "0.8"}]}], ",", 
     RowBox[{"sol", "/.", 
      RowBox[{"n0", "\[Rule]", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Red", ",", "Blue", ",", "Green", ",", "Black", ",", "Magenta", ",", 
      "Brown"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682180718673318*^9, 3.682180745869381*^9}, {
  3.6821809435737176`*^9, 3.6821810903658347`*^9}, {3.682181198835*^9, 
  3.68218125547871*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJxFxw0sFHAcxvHTdYSjEHHujax0YW5i2DonqyMvlbLLy+JwonBzbCqmsOhw
kluZkJKsZndtUvNSujmN4+5W6WUps7xdOOs4562Lasvv/2zfPfs4JfIiudsw
GEz43/59Q0GiMT25nIH5v3sxGn82NS1gy1/Cy/hU6mVwLivaEkcVgI/1MeNW
KLVgcdGhYi3lCfg7R2I3T+kE5526mDBHkYNN1+rk6R4j4KzeqxUa/gTYo1n0
rl0yA56KSCWO+WrBNYQS0oMEHdiP3/EUq1gGyz7XneTtXwfTKzYY9iG/waxp
/zFPNoa5ZbX7i6NLGiNwnkHg9fIKFmxi9SPtDA0HxilxLPNXxuBfKnF6ddYO
8BRb4kAmm4EDb2RmDIjNwbc3OkyD4i3AsURZ2DedJRgvPahxjtoF5no36aPd
rMC5BZciqXrk67OiYZXKGhxG2/kYf9cGLBT7SMM4u8GDpx8acvxswVIlr8IN
awduu1DIVIwik0MDfDPb94CDNuOKG/PtwcmfXi92RDmAGYVFzzlUAriat9CN
VyOPX3s03djjCJ7jdib3lhLB2gxrEyWHBJaEDBlS3Mng6VRPH6wemdA6IipV
UsDFCfwmZSgVvGJwEIZ2Irt219QOujiBvZPenLASIEvrbe0VemRXqW1ZRKwz
OBynIb3vQdZ+nZTJaXvBvHqhjeAmssLI5efxW8i0812DeBHyJF1dWHUH+Ww/
U1vTgHxkUadoaUW2C44p6etHzhZrOSVy5LfWpYeDh5DLR58tDamQMdkWScMf
kWcbpAHjE8gsLNuxeQq5OXV+matGjvciSGZmkT8MZBMXFpDpHmarbTrkStH9
4Rw9csg5ZdnqKnKLLCmlax15+4H1wHwDMqeyisTYQO7R7Vvb3ET+A3FEFuk=

      "]]}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
BqVhF82oLpIkAVuj3LzTsf8HDmLj8w==
      "]]}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
f/z/HJUcOQ==
      "]]}, 
    {RGBColor[1, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
7D4mHYKX515tuHJecYUgsNUfanhh/x8kzLgZ
      "]]}, 
    {RGBColor[0.6, 0.4, 0.2], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
t+b/Aw3NDBc=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0., 1.9999092042440663`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6821810139549923`*^9, 3.682181094760975*^9, {3.6821812406778655`*^9, 
   3.6821812573641977`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Nstar",
  FontSlant->"Italic"],
 "=2 seems to be a stable equilibrium point, and ",
 StyleBox["Nstar",
  FontSlant->"Italic"],
 "=0 seems to be an unstable equilibrium point. To verify this finding:"
}], "Text",
 CellChangeTimes->{{3.682181280465192*^9, 3.6821812821166215`*^9}, 
   3.6821813339387856`*^9, {3.6821813759686985`*^9, 3.6821813773690615`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nstar", "=", 
  RowBox[{
   RowBox[{"Values", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "n", "]"}], "\[Equal]", "0"}], ",", "n"}], "]"}], 
    "]"}], "/.", "param"}]}]], "Input",
 CellChangeTimes->{{3.682181347357269*^9, 3.682181353545876*^9}, {
  3.682181390582492*^9, 3.6821814273520412`*^9}, {3.682181692020939*^9, 
  3.6821816936293573`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6821814343068457`*^9, 3.6821816951247435`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"Nstar", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/.", 
  "param"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", 
   RowBox[{"Nstar", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/.", "param"}]}], "Input",
 CellChangeTimes->{{3.68218155042117*^9, 3.682181601078324*^9}, {
  3.6821817452147512`*^9, 3.6821818380968695`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{
  3.682181567781677*^9, 3.6821816030528355`*^9, 3.682181700599165*^9, 
   3.6821817527827153`*^9, {3.682181792376997*^9, 3.682181806510667*^9}, 
   3.682181843428253*^9}],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{
  3.682181567781677*^9, 3.6821816030528355`*^9, 3.682181700599165*^9, 
   3.6821817527827153`*^9, {3.682181792376997*^9, 3.682181806510667*^9}, 
   3.6821818434492617`*^9}]
}, Open  ]],

Cell[TextData[{
 "The function ",
 StyleBox["f(N)",
  FontSlant->"Italic"],
 " has a zero at ",
 StyleBox["N = Nstar[1] = ",
  FontSlant->"Italic"],
 "0, and the derivative of ",
 StyleBox["f(N)",
  FontSlant->"Italic"],
 " at ",
 StyleBox["N = Nstar[1] ",
  FontSlant->"Italic"],
 "= 0  is positive. Hence ",
 StyleBox["Nstar[1] ",
  FontSlant->"Italic"],
 "= 0 is an ",
 StyleBox["unstable equilibrium",
  FontWeight->"Bold"],
 " point."
}], "Text",
 CellChangeTimes->{{3.6821818846405354`*^9, 3.6821818863109694`*^9}, {
  3.682181955936049*^9, 3.6821819903529863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"Nstar", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], "/.", 
  "param"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", 
   RowBox[{"Nstar", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], "/.", "param"}]}], "Input",
 CellChangeTimes->{{3.682181863973589*^9, 3.6821818670263815`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.6821818688968663`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.682181868917873*^9}]
}, Open  ]],

Cell[TextData[{
 "The function ",
 StyleBox["f(N)",
  FontSlant->"Italic"],
 " has a zero at ",
 StyleBox["N = Nstar[2] = ",
  FontSlant->"Italic"],
 "0, and the derivative of ",
 StyleBox["f(N)",
  FontSlant->"Italic"],
 " at ",
 StyleBox["N = Nstar[2] ",
  FontSlant->"Italic"],
 "= 0  is negative. Hence ",
 StyleBox["Nstar[2] ",
  FontSlant->"Italic"],
 "= 0 is an ",
 StyleBox["stable equilibrium",
  FontWeight->"Bold"],
 " point."
}], "Text",
 CellChangeTimes->{{3.68218201132143*^9, 3.6821820448151283`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 953},
WindowMargins->{{166, Automatic}, {Automatic, 44}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 322, 7, 70, "Section"],
Cell[905, 31, 552, 11, 49, "Text"],
Cell[1460, 44, 188, 2, 30, "Text"],
Cell[1651, 48, 122, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[1798, 54, 402, 7, 49, "Subsection"],
Cell[2203, 63, 1410, 34, 173, "Text"],
Cell[CellGroupData[{
Cell[3638, 101, 248, 3, 39, "Subsubsection"],
Cell[3889, 106, 222, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[4136, 113, 480, 14, 31, "Input"],
Cell[4619, 129, 371, 11, 46, "Output"]
}, Open  ]],
Cell[5005, 143, 427, 10, 31, "Text"],
Cell[CellGroupData[{
Cell[5457, 157, 480, 9, 31, "Input"],
Cell[5940, 168, 487, 12, 47, "Output"]
}, Open  ]],
Cell[6442, 183, 946, 19, 88, "Text"],
Cell[CellGroupData[{
Cell[7413, 206, 623, 15, 52, "Input"],
Cell[8039, 223, 723, 18, 65, "Output"]
}, Open  ]],
Cell[8777, 244, 528, 13, 50, "Text"],
Cell[CellGroupData[{
Cell[9330, 261, 443, 11, 31, "Input"],
Cell[9776, 274, 457, 14, 65, "Output"]
}, Open  ]],
Cell[10248, 291, 891, 19, 87, "Text"],
Cell[CellGroupData[{
Cell[11164, 314, 366, 8, 92, "Input"],
Cell[11533, 324, 378, 11, 33, "Output"]
}, Open  ]],
Cell[11926, 338, 213, 2, 30, "Text"],
Cell[12142, 342, 212, 5, 31, InheritFromParent],
Cell[12357, 349, 2655, 56, 236, "Output"],
Cell[15015, 407, 307, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[15347, 416, 272, 6, 52, "Input"],
Cell[15622, 424, 138, 2, 31, "Output"],
Cell[15763, 428, 122, 2, 31, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15934, 436, 223, 2, 33, "Subsubsection"],
Cell[16160, 440, 1073, 19, 107, "Text"],
Cell[17236, 461, 122, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[17383, 467, 1351, 39, 132, "Input"],
Cell[18737, 508, 11650, 227, 72, "Output"]
}, Open  ]],
Cell[30402, 738, 383, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[30810, 749, 515, 9, 31, "Input"],
Cell[31328, 760, 2871, 59, 236, "Output"]
}, Open  ]],
Cell[34214, 822, 587, 11, 49, "Text"],
Cell[CellGroupData[{
Cell[34826, 837, 436, 7, 31, "Input"],
Cell[35265, 846, 416, 5, 31, "Output"]
}, Open  ]],
Cell[35696, 854, 300, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[36021, 863, 290, 6, 31, "Input"],
Cell[36314, 871, 11985, 232, 72, "Output"]
}, Open  ]],
Cell[48314, 1106, 341, 6, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[48692, 1117, 181, 3, 33, "Subsubsection"],
Cell[48876, 1122, 570, 10, 49, "Text"],
Cell[49449, 1134, 168, 3, 31, "Input"],
Cell[49620, 1139, 2277, 73, 106, "Text"],
Cell[CellGroupData[{
Cell[51922, 1216, 375, 10, 31, "Input"],
Cell[52300, 1228, 241, 6, 46, "Output"]
}, Open  ]],
Cell[52556, 1237, 1065, 28, 90, "Text"],
Cell[CellGroupData[{
Cell[53646, 1269, 818, 18, 52, "Input"],
Cell[54467, 1289, 422, 8, 46, "Output"],
Cell[54892, 1299, 389, 7, 46, "Output"]
}, Open  ]],
Cell[55296, 1309, 941, 21, 81, "Text"],
Cell[CellGroupData[{
Cell[56262, 1334, 1313, 28, 132, "Input"],
Cell[57578, 1364, 591, 11, 46, "Output"],
Cell[58172, 1377, 3093, 62, 223, "Output"],
Cell[61268, 1441, 497, 8, 31, "Output"],
Cell[61768, 1451, 471, 7, 31, "Output"],
Cell[62242, 1460, 463, 6, 31, "Output"]
}, Open  ]],
Cell[62720, 1469, 658, 13, 68, "Text"],
Cell[CellGroupData[{
Cell[63403, 1486, 476, 12, 31, "Input"],
Cell[63882, 1500, 396, 10, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64315, 1515, 1655, 37, 92, "Input"],
Cell[65973, 1554, 744, 19, 65, "Output"],
Cell[66720, 1575, 688, 16, 33, "Output"],
Cell[67411, 1593, 345, 5, 31, "Output"],
Cell[67759, 1600, 4915, 95, 239, "Output"]
}, Open  ]],
Cell[72689, 1698, 534, 15, 44, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73272, 1719, 241, 3, 49, "Subsection"],
Cell[73516, 1724, 600, 17, 49, "Text"],
Cell[CellGroupData[{
Cell[74141, 1745, 420, 14, 45, "Subsubsection"],
Cell[CellGroupData[{
Cell[74586, 1763, 1357, 34, 112, "Input"],
Cell[75946, 1799, 523, 13, 51, "Output"],
Cell[76472, 1814, 559, 11, 21, "Message"],
Cell[77034, 1827, 389, 9, 40, "Output"],
Cell[77426, 1838, 603, 12, 21, "Message"],
Cell[78032, 1852, 397, 10, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[78478, 1868, 479, 15, 37, "Subsubsection"],
Cell[CellGroupData[{
Cell[78982, 1887, 1393, 34, 112, "Input"],
Cell[80378, 1923, 532, 12, 31, "Output"],
Cell[80913, 1937, 388, 7, 36, "Output"],
Cell[81304, 1946, 329, 5, 31, "Output"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81682, 1957, 524, 15, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[82231, 1976, 1376, 33, 112, "Input"],
Cell[83610, 2011, 514, 11, 31, "Output"],
Cell[84127, 2024, 397, 7, 31, "Output"],
Cell[84527, 2033, 374, 6, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84950, 2045, 575, 16, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[85550, 2065, 1514, 36, 112, "Input"],
Cell[87067, 2103, 618, 13, 31, "Output"],
Cell[87688, 2118, 489, 9, 47, "Output"],
Cell[88180, 2129, 535, 11, 21, "Message"],
Cell[88718, 2142, 859, 20, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89626, 2168, 724, 20, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[90375, 2192, 1599, 37, 112, "Input"],
Cell[91977, 2231, 726, 17, 31, "Output"],
Cell[92706, 2250, 604, 13, 36, "Output"],
Cell[93313, 2265, 450, 7, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93812, 2278, 774, 20, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[94611, 2302, 1684, 39, 112, "Input"],
Cell[96298, 2343, 772, 17, 31, "Output"],
Cell[97073, 2362, 677, 14, 46, "Output"],
Cell[97753, 2378, 718, 16, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98520, 2400, 701, 19, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[99246, 2423, 1595, 37, 112, "Input"],
Cell[100844, 2462, 721, 16, 31, "Output"],
Cell[101568, 2480, 600, 12, 31, "Output"],
Cell[102171, 2494, 616, 13, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102836, 2513, 823, 21, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[103684, 2538, 1837, 42, 112, "Input"],
Cell[105524, 2582, 877, 19, 31, "Output"],
Cell[106404, 2603, 631, 13, 21, "Message"],
Cell[107038, 2618, 715, 14, 47, "Output"],
Cell[107756, 2634, 561, 12, 21, "Message"],
Cell[108320, 2648, 1132, 26, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[109513, 2681, 242, 3, 41, "Subsection"],
Cell[109758, 2686, 1791, 56, 132, "Text"],
Cell[111552, 2744, 52, 1, 31, "Input"],
Cell[111607, 2747, 480, 17, 30, "Text"],
Cell[CellGroupData[{
Cell[112112, 2768, 300, 8, 31, "Input"],
Cell[112415, 2778, 19003, 324, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131455, 3107, 1370, 35, 132, "Input"],
Cell[132828, 3144, 277, 7, 31, "Output"],
Cell[133108, 3153, 166, 4, 31, "Output"],
Cell[133277, 3159, 399, 11, 31, "Output"],
Cell[133679, 3172, 387, 11, 40, "Output"],
Cell[134069, 3185, 205, 5, 31, "Output"],
Cell[134277, 3192, 358, 10, 40, "Output"]
}, Open  ]],
Cell[134650, 3205, 397, 14, 30, "Text"],
Cell[CellGroupData[{
Cell[135072, 3223, 268, 7, 31, "Input"],
Cell[135343, 3232, 229, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135609, 3243, 311, 8, 31, "Input"],
Cell[135923, 3253, 19747, 334, 249, "Output"]
}, Open  ]],
Cell[155685, 3590, 372, 10, 49, "Text"],
Cell[CellGroupData[{
Cell[156082, 3604, 299, 7, 52, "Input"],
Cell[156384, 3613, 89, 1, 31, "Output"],
Cell[156476, 3616, 90, 1, 31, "Output"]
}, Open  ]],
Cell[156581, 3620, 248, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[156854, 3628, 767, 22, 92, "Input"],
Cell[157624, 3652, 11730, 232, 72, "Output"],
Cell[169357, 3886, 19770, 335, 249, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[189176, 4227, 241, 3, 41, "Subsection"],
Cell[189420, 4232, 2174, 56, 113, "Text"],
Cell[191597, 4290, 120, 2, 31, "Input"],
Cell[191720, 4294, 157, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[191902, 4302, 1039, 26, 92, "Input"],
Cell[192944, 4330, 382, 9, 31, "Output"],
Cell[193329, 4341, 326, 7, 31, "Output"],
Cell[193658, 4350, 297, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193992, 4361, 1161, 31, 92, "Input"],
Cell[195156, 4394, 626, 15, 47, "Output"],
Cell[195785, 4411, 722, 19, 50, "Output"],
Cell[196510, 4432, 829, 15, 21, "Message"],
Cell[197342, 4449, 586, 13, 49, "Output"]
}, Open  ]],
Cell[197943, 4465, 143, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[198111, 4470, 1382, 30, 92, "Input"],
Cell[199496, 4502, 324, 8, 31, "Output"],
Cell[199823, 4512, 263, 6, 31, "Output"],
Cell[200089, 4520, 429, 11, 51, "Output"],
Cell[200521, 4533, 16285, 280, 250, "Output"]
}, Open  ]],
Cell[216821, 4816, 510, 15, 30, "Text"],
Cell[217334, 4833, 119, 2, 31, "Input"],
Cell[217456, 4837, 237, 9, 30, "Text"],
Cell[CellGroupData[{
Cell[217718, 4850, 868, 22, 72, "Input"],
Cell[218589, 4874, 326, 7, 44, "Output"],
Cell[218918, 4883, 327, 7, 31, "Output"],
Cell[219248, 4892, 6819, 123, 233, "Output"]
}, Open  ]],
Cell[226082, 5018, 410, 13, 43, "Text"],
Cell[CellGroupData[{
Cell[226517, 5035, 1263, 34, 132, "Input"],
Cell[227783, 5071, 506, 14, 47, "Output"],
Cell[228292, 5087, 603, 18, 50, "Output"],
Cell[228898, 5107, 679, 13, 21, "Message"],
Cell[229580, 5122, 465, 12, 49, "Output"],
Cell[230048, 5136, 5551, 104, 236, "Output"]
}, Open  ]],
Cell[235614, 5243, 375, 11, 30, "Text"],
Cell[CellGroupData[{
Cell[236014, 5258, 954, 26, 52, "Input"],
Cell[236971, 5286, 28682, 493, 236, "Output"]
}, Open  ]],
Cell[265668, 5782, 384, 9, 30, "Text"],
Cell[CellGroupData[{
Cell[266077, 5795, 415, 11, 31, "Input"],
Cell[266495, 5808, 189, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266721, 5818, 423, 12, 52, "Input"],
Cell[267147, 5832, 241, 5, 31, "Output"],
Cell[267391, 5839, 243, 5, 31, "Output"]
}, Open  ]],
Cell[267649, 5847, 572, 22, 49, "Text"],
Cell[CellGroupData[{
Cell[268246, 5873, 373, 11, 52, "Input"],
Cell[268622, 5886, 94, 2, 31, "Output"],
Cell[268719, 5890, 110, 3, 31, "Output"]
}, Open  ]],
Cell[268844, 5896, 516, 21, 49, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

